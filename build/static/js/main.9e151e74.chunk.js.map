{"version":3,"sources":["components/Navbar.tsx","utils/displayName.ts","components/GameBox.tsx","components/ActiveGames.tsx","components/UserGames.tsx","components/Profile.tsx","ScrollToTop.tsx","components/MyProfile.tsx","components/Chat.tsx","components/LeftSide.tsx","components/RecentGames.tsx","components/RightSide.tsx","App.tsx","reducers/user.ts","reportWebVitals.ts","reducers/games.ts","reducers/associatedKeypair.ts","reducers/wallet.ts","reducers/sockets.ts","store.ts","index.tsx","utils/shortenAddress.ts","components/Socials.tsx"],"names":["messageToSign","Uint8Array","from","Buffer","connection","Connection","clusterApiUrl","servicePublicKey","PublicKey","Navbar","wallet","useWallet","useState","isAskedToVerify","setIsAskedToVerify","isLoggedIn","setIsLoggedIn","depositModalOpen","setDepositModalOpen","menuOpen","setMenuOpen","depositAmount","setDepositAmount","depositStatus","setDepositStatus","withdrawModalOpen","setWithdrawModalOpen","withdrawAmount","setWithdrawAmount","withdrawnAmount","setWithdrawnAmount","balanceChanged","setBalanceChanged","withdrawStatus","setWithdrawStatus","pendingAmount","setPendingAmount","prevBalance","setPrevBalance","dispatch","useDispatch","user","useSelector","state","associatedKeypair","sockets","connectUser","a","console","log","type","payload","connectSocket","loadAssociatedKeypair","axios","get","withCredentials","data","associatedKp","Keypair","fromSecretKey","secretKey","getAssociatedKeypairBalance","getBalance","publicKey","emit","_id","on","amount","fromDeposit","deposit","LAMPORTS_PER_SOL","toast","error","transaction","Transaction","add","SystemProgram","transfer","fromPubkey","toPubkey","lamports","sendTransaction","response","message","toString","withdraw","feePayer","signers","requestWithdraw","balance","post","Promise","resolve","setTimeout","openWithdrawModel","balanace","useEffect","signAndAuth","signMessage","authenticated","toBase58","toBytes","signedMessage","Array","className","to","src","isActive","onClick","onAnimationEnd","Number","toFixed","shortenAddress","style","display","width","height","d","value","onChange","event","input","inputDepositAmount","target","size","color","inputWithdrawAmount","disabled","displayName","username","GameBox","props","game","setGame","move","setMove","joinModalOpen","setJoinModalOpen","useSound","volume","changeGameStatus","status","winner","creator","opponent","includes","joinGame","gameId","success","cancelGame","creatorMove","onAnimationEndCapture","date","countDownEnd","onComplete","renderer","time","seconds","opponentMove","activeStatuses","amountOptions","ActiveGames","userGames","setUserGames","openGames","setOpenGames","createGameModalOpen","setCreateGameModalOpen","creatingGame","setCreatingGame","gameAmount","setGameAmount","games","createGame","removeGame","getGamesData","activeGames","updatedGame","forEach","push","length","map","UserGames","index","winAmount","moment","updatedAt","format","Profile","useParams","setUser","setGames","notFound","setNotFound","gamesWon","setGamesWon","gamesLost","setGamesLost","getUser","all","responseUser","responseGame","undefined","ScrollToTop","pathname","useLocation","window","scrollTo","MyProfile","editData","setEditData","editUserModalOpen","setEditUserModalOpen","editUser","newUser","getGames","createAvatar","avatarStyle","seed","rel","href","backgroundImage","alt","onInput","placeholder","Chat","messagesRef","useRef","setMessage","messages","setMessages","sendMessage","content","scrollMessagesToBottom","current","scrollTop","scrollHeight","inputMessage","contentWords","split","c","trim","join","getLast","old","ref","reverse","Date","now","lastMessageAt","onKeyPress","key","intervalDelay","precision","milliseconds","LeftSide","Socials","RecentGames","recentGames","setRecentGames","loadRecentGames","loser","RightSide","network","WalletAdapterNetwork","Testnet","App","UserActions","endpoint","useMemo","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","addEventListener","solana","gameSocket","io","userSocket","messageSocket","ConnectionProvider","WalletProvider","autoConnect","path","element","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GamesActions","AssociatedKeypairActions","WalletActions","SocketsActions","defaultSockets","combined","combineReducers","action","LOAD_USER","UPDATE_USER_BALANCE","UPDATE_USER_LAST_MESSAGE_AT","LOAD_WALLET","LOAD_ASSOCIATED_KEYPAIR","LOAD_GAMES","ADD_GAME","find","UPDATE_GAME","LOAD_GAME_SOCKET","LOAD_USER_SOCKET","LOAD_MESSAGE_SOCKET","createStore","ReactDOM","render","store","document","getElementById","slice"],"mappings":"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","file":"static/js/main.9e151e74.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { useWallet, WalletContextState } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, Message, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { clusterApiUrl } from '@solana/web3.js'\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\r\n\r\nimport '../css/Navbar.css'\r\nimport '../css/Modal.css'\r\nimport '../css/Dropdown.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport { Sockets } from '../reducers/sockets';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport Socials from './Socials';\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\n\r\nconst messageToSign = Uint8Array.from(Buffer.from('Login to the Degen Games'))\r\n\r\nconst connection = new Connection(\r\n    clusterApiUrl('mainnet-beta'),\r\n    'confirmed',\r\n);\r\n\r\nconst servicePublicKey = new PublicKey('Degend6MwnmmXx1uiFPp9UqURUN95BZxUYKLUHZnqUHq')\r\n\r\nfunction Navbar() {\r\n\r\n    const wallet = useWallet()\r\n    const [isAskedToVerify, setIsAskedToVerify] = useState(false)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [depositModalOpen, setDepositModalOpen] = useState(false)\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n    const [depositAmount, setDepositAmount] = useState<number | null>(0)\r\n    const [depositStatus, setDepositStatus] = useState('none')\r\n    const [withdrawModalOpen, setWithdrawModalOpen] = useState(false)\r\n    const [withdrawAmount, setWithdrawAmount] = useState<number | null>(0)\r\n    const [withdrawnAmount, setWithdrawnAmount] = useState<number | null>(0)\r\n    const [balanceChanged, setBalanceChanged] = useState('0')\r\n    const [withdrawStatus, setWithdrawStatus] = useState('none')\r\n    const [pendingAmount, setPendingAmount] = useState(0)\r\n    const [prevBalance, setPrevBalance] = useState<number | null>(null)\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n    const associatedKeypair = useSelector<CombinedReducer, Keypair>((state) => state.associatedKeypair)\r\n    const sockets = useSelector<CombinedReducer, Sockets>((state) => state.sockets)\r\n\r\n    const connectUser = async (user: User) => {\r\n        console.log({ wallet })\r\n        dispatch({ type: 'LOAD_WALLET', payload: wallet })\r\n        dispatch({ type: 'LOAD_USER', payload: user })\r\n        connectSocket(user)\r\n        loadAssociatedKeypair()\r\n        return setIsLoggedIn(true)\r\n    }\r\n\r\n    const loadAssociatedKeypair = async () => {\r\n        const associatedKeypair = (await axios.get('/api/u/associatedKeypair', { withCredentials: true })).data\r\n        const associatedKp = Keypair.fromSecretKey(Uint8Array.from(associatedKeypair.secretKey))\r\n        dispatch({ type: 'LOAD_ASSOCIATED_KEYPAIR', payload: associatedKp })\r\n    }\r\n\r\n    const getAssociatedKeypairBalance = async () => {\r\n        return connection.getBalance(associatedKeypair.publicKey)\r\n    }\r\n\r\n    const connectSocket = (user: User) => {\r\n        if (!(sockets && sockets.user)) return\r\n\r\n        sockets.user.emit('subscribeToProfile', user._id)\r\n        sockets.user.on('balanceChange', (amount: number, fromDeposit: boolean) => {\r\n            dispatch({ type: 'UPDATE_USER_BALANCE', payload: amount })\r\n\r\n            if (fromDeposit) setDepositStatus('validated')\r\n        })\r\n    }\r\n\r\n    const inputDepositAmount = (input: string) => {\r\n        if (!input) return setDepositAmount(null)\r\n        console.log({ input })\r\n        if (Number(input) >= 0) setDepositAmount(Number(input) * LAMPORTS_PER_SOL)\r\n        else setDepositAmount(0)\r\n    }\r\n    const inputWithdrawAmount = (input: string) => {\r\n        if (!input) return setWithdrawAmount(null)\r\n        console.log({ input })\r\n        if (Number(input) >= 0) setWithdrawAmount(Number(input) * LAMPORTS_PER_SOL)\r\n        else setWithdrawAmount(0)\r\n    }\r\n\r\n    const deposit = async () => {\r\n        if (!(wallet && wallet.publicKey && depositAmount)) return\r\n\r\n        if (depositAmount < 0.01 * LAMPORTS_PER_SOL) return toast.error('Minimum deposit amount is 0.01')\r\n\r\n        try {\r\n            const transaction = new Transaction().add(\r\n                SystemProgram.transfer({\r\n                    fromPubkey: wallet.publicKey,\r\n                    toPubkey: servicePublicKey,\r\n                    lamports: depositAmount\r\n                })\r\n            )\r\n\r\n            await wallet.sendTransaction(transaction, connection)\r\n            console.log({ transaction })\r\n            setDepositStatus('sent')\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n            setDepositStatus('failed')\r\n        }\r\n    }\r\n\r\n    const withdraw = async () => {\r\n        if (!(wallet && wallet.publicKey)) return\r\n\r\n        setWithdrawStatus('withdrawing')\r\n\r\n        const amount = await connection.getBalance(associatedKeypair.publicKey)\r\n        const transaction = new Transaction().add(\r\n            SystemProgram.transfer({\r\n                fromPubkey: associatedKeypair.publicKey,\r\n                toPubkey: new PublicKey(user.publicKey),\r\n                lamports: amount\r\n            })\r\n        )\r\n        transaction.feePayer = new PublicKey(user.publicKey)\r\n\r\n        await wallet.sendTransaction(transaction, connection, { signers: [associatedKeypair] })\r\n\r\n        setWithdrawnAmount(amount)\r\n        setWithdrawStatus('withdrawn')\r\n    }\r\n    const requestWithdraw = async () => {\r\n        if (!(wallet && wallet.publicKey && withdrawAmount)) return\r\n\r\n        if (withdrawAmount < 0.01 * LAMPORTS_PER_SOL) return toast.error(\"Minimum withdraw is 0.01 SOLs\")\r\n        if (withdrawAmount > user.balance) return toast.error(\"Balance needs to be higher than the withdraw amount\")\r\n\r\n        try {\r\n            setWithdrawStatus('withdrawing')\r\n            setPendingAmount(withdrawAmount)\r\n            await axios.post('/api/u/requestWithdraw', { amount: withdrawAmount })\r\n            while (await connection.getBalance(associatedKeypair.publicKey) < withdrawAmount) {\r\n                await new Promise((resolve) => setTimeout(() => resolve(1), 100))\r\n            }\r\n            // connection.onAccountChange(\r\n            //     associatedKeypair.publicKey,\r\n            //     (updatedAccountInfo, context) => { if (updatedAccountInfo.lamports >= withdrawAmount) withdraw() },\r\n            //     'confirmed'\r\n            // );\r\n            withdraw()\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    const openWithdrawModel = async () => {\r\n        const balanace = await getAssociatedKeypairBalance()\r\n        if (balanace > 0.01) {\r\n            setPendingAmount(balanace)\r\n            setWithdrawStatus('hasPending')\r\n        } else {\r\n            setWithdrawStatus('none')\r\n        }\r\n        setWithdrawModalOpen(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const signAndAuth = async (wallet: WalletContextState) => {\r\n            try {\r\n                if (!wallet || !wallet.signMessage || !wallet.publicKey || isAskedToVerify) return\r\n                setIsAskedToVerify(true)\r\n\r\n                let { authenticated, user } = (await axios.get('/api/auth/state')).data\r\n                console.log({ authenticated })\r\n                if (authenticated) {\r\n                    if (user.publicKey === wallet.publicKey.toBase58()) {\r\n                        await connectUser(user)\r\n                        return\r\n                    }\r\n                    console.log('PUBLIC KEYS ARE NOT THE SAME!')\r\n                    await axios.get('/api/auth/logout')\r\n                }\r\n\r\n                const publicKey = wallet.publicKey.toBytes()\r\n                const signedMessage = await wallet.signMessage(messageToSign)\r\n\r\n                user = (await axios.post('/api/auth/login', { publicKey: Array.from(publicKey), signedMessage: Array.from(signedMessage) }, { withCredentials: true })).data\r\n\r\n                await connectUser(user)\r\n            } catch (e: any) {\r\n                toast.error(e.response.data.message.toString())\r\n                console.log(e)\r\n            }\r\n        }\r\n\r\n        signAndAuth(wallet)\r\n    }, [wallet])\r\n\r\n    useEffect(() => {\r\n        if (!user) return\r\n        if (prevBalance != null) {\r\n            console.log('Balance Update!', user.balance - prevBalance)\r\n            if (user.balance - prevBalance >= 0) {\r\n                setBalanceChanged('1')\r\n            } else {\r\n                setBalanceChanged('-1')\r\n            }\r\n        }\r\n        setPrevBalance(user.balance)\r\n    }, [user?.balance])\r\n\r\n    return (\r\n        <div className='Navbar' >\r\n            <div className='navbar'>\r\n                <div className='left'>\r\n                    <Link to='/' className='logo'>\r\n                        <img src='/logo.png' />\r\n                    </Link>\r\n                    <div className='navLinks'>\r\n                        <NavLink to='/rps' className={({ isActive }) => (isActive ? 'activeNavLink' : 'inactiveNavLink')}>\r\n                            <p className='title'>Rock Paper Scissors</p>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                {user ? <div onClick={() => setMenuOpen(!menuOpen)} className={menuOpen ? \"toggleMenu open\" : \"toggleMenu\"}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div> : null}\r\n                {\r\n                    isLoggedIn && user\r\n                        ? (\r\n                            <div className='user'>\r\n                                <div className='balance'>\r\n                                    <h4 data-balancechanged={balanceChanged} onAnimationEnd={() => setBalanceChanged('0')} className='amount'>{Number((user?.balance / LAMPORTS_PER_SOL).toFixed(5))} SOL</h4>\r\n                                </div>\r\n                                <button onClick={() => { setDepositModalOpen(true); setDepositStatus('none') }} className='depositB'>Deposit</button>\r\n                                <button onClick={() => openWithdrawModel()} className='withdrawB'>Withdraw</button>\r\n                                <Link to={`/u/${user.publicKey.toString()}`} className='profile'>\r\n                                    <h4 className='name'>{shortenAddress(user.publicKey.toString())}</h4>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                        : (\r\n                            <div className='multiButton'>\r\n                                <WalletMultiButton />\r\n                            </div>\r\n                        )\r\n                }\r\n            </div >\r\n            <div className='modal' style={{ display: depositModalOpen ? 'flex' : 'none' }}>\r\n                <div className='container'>\r\n                    <div className='wrapper'>\r\n                        <button className='closeB' onClick={() => setDepositModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                        <h1 className='title'>Deposit</h1>\r\n                        {\r\n                            depositStatus === 'none' ?\r\n                                <>\r\n                                    <input type=\"number\" value={depositAmount === null ? '' : depositAmount / LAMPORTS_PER_SOL} onChange={(event) => inputDepositAmount((event.target as HTMLInputElement).value)} />\r\n                                    <button className='actionB modalB' onClick={() => deposit()}>Deposit</button></>\r\n                                :\r\n                                depositStatus === 'sent' ?\r\n                                    <>\r\n                                        <h3 className='status'>Validating <ClipLoader size={13} color='#443f89' /></h3>\r\n                                    </> : depositStatus === 'validated' ? <h3 className='status'>Succesfully validated</h3> : <h3 className='status'>Failed</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='overlay'></div>\r\n            </div>\r\n            <div className='modal' style={{ display: withdrawModalOpen ? 'flex' : 'none' }}>\r\n                <div className='container'>\r\n                    <div className='wrapper'>\r\n                        <button className='closeB' onClick={() => setWithdrawModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                        <h1 className='title'>Withdraw</h1>\r\n                        {\r\n                            withdrawStatus === 'none'\r\n                                ?\r\n                                <>\r\n                                    <input type=\"number\" value={withdrawAmount === null ? '' : withdrawAmount / LAMPORTS_PER_SOL} onChange={(event) => inputWithdrawAmount((event.target as HTMLInputElement).value)} />\r\n                                    <button className='actionB modalB' onClick={() => requestWithdraw()}>Withdraw</button></>\r\n                                :\r\n                                withdrawStatus === 'hasPending' || withdrawStatus === 'withdrawing' ?\r\n                                    <div className='pending'>\r\n                                        <h2>Pending: {pendingAmount / LAMPORTS_PER_SOL} SOL</h2>\r\n                                        <button className='actionB' disabled={withdrawStatus === 'withdrawing'} onClick={() => withdraw()}><span className='withdrawLabel'>Withdraw</span> {withdrawStatus === 'withdrawing' ? <ClipLoader size={13} color='#27244f' /> : null}</button>\r\n                                    </div> : withdrawStatus === 'withdrawn' ?\r\n                                        <h2>Succesfully withdrawn {withdrawnAmount ? withdrawnAmount / LAMPORTS_PER_SOL : null}</h2>\r\n                                        : <h3 className='status'>Failed</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='overlay'></div>\r\n            </div>\r\n            <div style={{ display: menuOpen ? 'flex' : 'none' }} className='menu'>\r\n                {user ? <div className='navLinks'>\r\n                    <NavLink onClick={() => setDepositModalOpen(true)} to='' className='activeNavLink navLink'>\r\n                        <img className='icon' src='/img/deposit.png' />\r\n                        <p className='title'>Deposit</p>\r\n                    </NavLink>\r\n                    <NavLink onClick={() => setWithdrawModalOpen(true)} to='' className='activeNavLink navLink'>\r\n                        <img className='icon' src='/img/withdraw.png' />\r\n                        <p className='title'>Withdraw</p>\r\n                    </NavLink>\r\n                </div> : null}\r\n                <Socials />\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import User from \"../interfaces/User\";\r\nimport { shortenAddress } from \"./shortenAddress\";\r\n\r\nexport const displayName = (user: User) => {\r\n    return user.username || shortenAddress(user.publicKey)\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js'\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport useSound from 'use-sound';\r\nimport '../css/ActiveGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\nimport { displayName } from '../utils/displayName';\r\n\r\nimport 'animate.css'\r\n\r\ninterface Props {\r\n    game: Game,\r\n    removeGame: (game: Game) => void\r\n}\r\n\r\nfunction GameBox(props: Props) {\r\n    const [game, setGame] = useState<Game>()\r\n    const [move, setMove] = useState(0)\r\n    const [joinModalOpen, setJoinModalOpen] = useState(false)\r\n\r\n    const wallet = useWallet()\r\n    const dispatch = useDispatch()\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n    const [playJoin] = useSound('/sound/join.mp3', { volume: 0.25 });\r\n    const [playWin] = useSound('/sound/win.mp3', { volume: 0.25 });\r\n    const [playLoss] = useSound('/sound/loss.mp3', { volume: 0.25 });\r\n\r\n    useEffect(() => {\r\n        setGame(props.game)\r\n    }, [props.game])\r\n\r\n    const applySound = (game: Game) => {\r\n        if (!(user?._id && [game.creator._id, game.opponent?._id].includes(user._id))) return\r\n\r\n        if (game.status === 'joined') {\r\n            playJoin()\r\n        } else if (game.status === 'revealed') {\r\n            if (!game.winner) return\r\n\r\n            if (game.winner?._id === game.creator._id) {\r\n                playWin()\r\n            } else {\r\n                playLoss()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const changeGameStatus = (status: string) => {\r\n        if (!game) return\r\n        if (game.status === status) return\r\n\r\n        // applySound(game)\r\n\r\n        setGame({ ...game, status })\r\n\r\n        if (status === 'revealed') {\r\n            if (game.winner && game.winner?._id === user._id) {\r\n                dispatch({ type: 'UPDATE_USER_BALANCE', payload: game.amount * 2 })\r\n            } else if (!game.winner && [game.creator._id, game.opponent?._id].includes(user._id)) {\r\n                dispatch({ type: 'UPDATE_USER_BALANCE', payload: game.amount })\r\n            }\r\n            setTimeout(() => {\r\n                game.status = 'removed'\r\n                dispatch({ type: 'UPDATE_GAME', payload: game })\r\n            }, 2500)\r\n        }\r\n    }\r\n\r\n    const joinGame = async () => {\r\n        if (!(wallet && wallet.publicKey && game)) return\r\n\r\n        if (user._id === game.creator._id) return toast.error('You can not join your game')\r\n        if (user.balance < game.amount) return toast.error('Balance needs to be higher than the game bet')\r\n\r\n        try {\r\n            await axios.post('/api/game/join', {\r\n                gameId: game._id,\r\n                move\r\n            })\r\n\r\n            toast.success('Joined the game')\r\n\r\n            setJoinModalOpen(false)\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    const cancelGame = async () => {\r\n        if (!(wallet && wallet.publicKey && game)) return\r\n\r\n        if (game.creator._id !== user._id) return toast.error('You can not cancel another person`s game')\r\n\r\n        try {\r\n            await axios.post('/api/game/cancel', {\r\n                gameId: game._id\r\n            })\r\n\r\n            toast.success('Game has been cancelled')\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {game && game.status !== 'removed' ? <div key={game._id} className='gameWrapper'>\r\n                <div className=\"players\">\r\n                    <div className='playerWrapper'>\r\n                        {game.status === 'revealed' ?\r\n                            <div className={game.winner?._id == game.creator._id ? 'player winner' : 'player loser'}>\r\n                                <Svg className='move flip' src={`./img/move${game.creatorMove}.svg`} />\r\n                                <Link to={`/u/${game.creator.publicKey}`} className='address'>{displayName(game.creator)}</Link>\r\n                            </div>\r\n                            : game.status === 'flipping' ?\r\n                                <div className='player'>\r\n                                    <div className='flip'><Svg onAnimationEndCapture={() => changeGameStatus('revealed')} className='move animate__animated animate__bounce' src='./img/move0.svg' /></div>\r\n                                    <Link to={`/u/${game.creator.publicKey}`} className='address'>{displayName(game.creator)}</Link>\r\n                                </div>\r\n                                : <div className='player'>\r\n                                    <Svg className='move flip' src='./img/move0.svg' />\r\n                                    <Link to={`/u/${game.creator.publicKey}`} className='address'>{displayName(game.creator)}</Link>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <div className='middle'>\r\n                        {game.status === 'countdown' ?\r\n                            <Countdown date={game.countDownEnd} onComplete={() => changeGameStatus('flipping')} renderer={time => <h3>{time.seconds}</h3>} />\r\n                            : <h3 className='vsTag'>VS</h3>}\r\n                    </div>\r\n                    <div className='playerWrapper'>\r\n                        {!game.opponent ?\r\n                            !user || game.creator._id === user._id ?\r\n                                <div className='player'>\r\n                                    <Svg className='movePlaceholder' src='/img/movePlaceholder.svg' />\r\n                                    <h3 className='address'>waiting...</h3>\r\n                                </div> : <div className='player join'><button onClick={() => setJoinModalOpen(true)} className='actionB'>Join</button> </div>\r\n                            : game.status === 'revealed' ?\r\n                                <div className={game.winner?._id == game.opponent._id ? 'player winner' : 'player loser'}>\r\n                                    <Svg className='move' src={`./img/move${game.opponentMove}.svg`} />\r\n                                    <Link to={`/u/${game.opponent.publicKey}`} className='address'>{displayName(game.opponent)}</Link>\r\n                                </div>\r\n                                : game.status === 'flipping' ?\r\n                                    <div className='player'>\r\n                                        <Svg onAnimationEndCapture={() => changeGameStatus('revealed')} className='move animate__animated animate__bounce' src='./img/move0.svg' />\r\n                                        <Link to={`/u/${game.opponent.publicKey}`} className='address'>{displayName(game.opponent)}</Link>\r\n                                    </div>\r\n                                    : <div className='player'>\r\n                                        <Svg className='move' src='./img/move0.svg' />\r\n                                        <Link to={`/u/${game.opponent.publicKey}`} className='address'>{displayName(game.opponent)}</Link>\r\n                                    </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='info'>\r\n                    <div className='bet'>\r\n                        <h3>{game.amount / LAMPORTS_PER_SOL} SOL</h3>\r\n                    </div>\r\n\r\n                    {!game.opponent && user ?\r\n                        game.creator._id === user._id ?\r\n                            <button className='deleteB' onClick={() => cancelGame()}><Svg src='/img/bin.svg' /></button>\r\n                            :\r\n                            null\r\n                        : <></>\r\n                    }\r\n                </div>\r\n            </div> : null\r\n            }\r\n            <div className='modal' style={{ display: joinModalOpen ? 'flex' : 'none' }}>\r\n                <div className='container'>\r\n                    <div className='wrapper'>\r\n                        <button className='closeB' onClick={() => setJoinModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                        <h1 className='title'>Join Game</h1>\r\n                        <div className='coinChooser'>\r\n                            <Svg onClick={() => setMove(0)} className={move === 0 ? 'chosen' : ''} src='./img/move0.svg' />\r\n                            <Svg onClick={() => setMove(1)} className={move === 1 ? 'chosen' : ''} src='./img/move1.svg' />\r\n                            <Svg onClick={() => setMove(2)} className={move === 2 ? 'chosen' : ''} src='./img/move2.svg' />\r\n                        </div>\r\n\r\n                        <button className='actionB modalB' onClick={() => joinGame()}>Join</button>\r\n                    </div>\r\n                </div>\r\n                <div className='overlay'></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GameBox;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport '../css/ActiveGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport GameBox from './GameBox';\r\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport Svg from 'react-inlinesvg'\r\n\r\nconst activeStatuses = ['active', 'joined', 'countdown', 'flipping']\r\n\r\nconst amountOptions = [0.05, 0.1, 0.25, 0.5, 1, 2]\r\n\r\nfunction ActiveGames() {\r\n\r\n    const wallet = useWallet()\r\n    const [userGames, setUserGames] = useState<Game[]>([])\r\n    const [openGames, setOpenGames] = useState<Game[]>([])\r\n    const [createGameModalOpen, setCreateGameModalOpen] = useState(false)\r\n    const [creatingGame, setCreatingGame] = useState(false)\r\n    const [gameAmount, setGameAmount] = useState<number | null>(0.05)\r\n    const [move, setMove] = useState(0)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n    const games = useSelector<CombinedReducer, Game[]>((state) => state.games)\r\n    const sockets = useSelector<CombinedReducer, Sockets>((state) => state.sockets)\r\n\r\n    const createGame = async () => {\r\n        if (!(wallet && wallet.publicKey && gameAmount && !creatingGame)) return\r\n        setCreatingGame(true)\r\n\r\n        if (user.balance < gameAmount) return toast.error('Balance needs to be higher than the game bet')\r\n\r\n        try {\r\n            await axios.post('/api/game', {\r\n                amount: gameAmount * LAMPORTS_PER_SOL,\r\n                creatorMove: move\r\n            })\r\n\r\n            toast.success('Game created')\r\n            setCreateGameModalOpen(false)\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n\r\n        setCreatingGame(false)\r\n    }\r\n\r\n    const gameUpdate = (game: Game) => {\r\n        dispatch({ type: 'UPDATE_GAME', payload: game })\r\n    }\r\n\r\n    const removeGame = (game: Game) => {\r\n        game.status = 'ended'\r\n        dispatch({ type: 'UPDATE_GAME', payload: game })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const getGamesData = async () => {\r\n            const activeGames = await axios.get('/api/game/allActive')\r\n\r\n            dispatch({ type: 'LOAD_GAMES', payload: activeGames.data })\r\n        }\r\n\r\n        getGamesData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!sockets.game) return\r\n\r\n        sockets.game.on('newGame', (game: Game) => dispatch({ type: 'ADD_GAME', payload: game }))\r\n        sockets.game.on('gameUpdate', (updatedGame: Game) => gameUpdate(updatedGame))\r\n\r\n    }, [sockets.game])\r\n\r\n    useEffect(() => {\r\n        let userGames: Game[] = []\r\n        let openGames: Game[] = []\r\n        games.forEach(game => {\r\n            if (game.status !== 'removed' && game.status !== 'cancelled') {\r\n                if (game.creator._id === user?._id) userGames.push(game)\r\n                else if (game.opponent && game.opponent._id === user?._id) { userGames.push(game); openGames.push(game) }\r\n                else openGames.push(game)\r\n            }\r\n        })\r\n        setUserGames(userGames)\r\n        setOpenGames(openGames)\r\n    }, [user, games])\r\n\r\n    return (\r\n        <div className='Page ActiveGames' >\r\n            <h1 className='gameTitle'>Rock Paper Scissors</h1>\r\n            <div className=\"typeWrapper\">\r\n                <div className='type'>\r\n                    <h2 className='typeHeader'>My Games</h2>\r\n                    <h2 className='gamesCounter'>{userGames.length}</h2>\r\n                </div>\r\n                {user ? <button className='createGameB' onClick={() => setCreateGameModalOpen(true)}>NEW GAME +</button> : null}\r\n            </div>\r\n            {userGames.length > 0 ? <div className='box games'>\r\n                {userGames.map(game => {\r\n                    return activeStatuses.includes(game.status) ? (\r\n                        <GameBox key={game._id} game={game} removeGame={removeGame} />\r\n                    ) : null\r\n                })}\r\n            </div> : <div className='box typePlaceHolder'><p>Your games will appear here</p></div>}\r\n            <div className='type'>\r\n                <h2 className='typeHeader'>Open Games</h2>\r\n                <h2 className='gamesCounter'>{openGames.length}</h2>\r\n            </div>\r\n            {openGames.length > 0 ? <div className='box games'>\r\n                {openGames.map(game => {\r\n                    return activeStatuses.includes(game.status) ? (\r\n                        <GameBox key={game._id} game={game} removeGame={removeGame} />\r\n                    ) : null\r\n                })}\r\n            </div> : <div className='box typePlaceHolder'><p>No open games at the moment</p></div>}\r\n            <div className='modal' style={{ display: createGameModalOpen ? 'flex' : 'none' }}>\r\n                <div className='container'>\r\n                    <div className='wrapper'>\r\n                        <button className='closeB' onClick={() => setCreateGameModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                        <h1 className='title'>Create Game</h1>\r\n                        <h3 className='subtitle'>Choose Move</h3>\r\n                        <div className='coinChooser'>\r\n                            <Svg onClick={() => setMove(0)} className={move === 0 ? 'chosen flip' : 'flip'} src='./img/move0.svg' />\r\n                            <Svg onClick={() => setMove(1)} className={move === 1 ? 'chosen flip' : 'flip'} src='./img/move1.svg' />\r\n                            <Svg onClick={() => setMove(2)} className={move === 2 ? 'chosen flip' : 'flip'} src='./img/move2.svg' />\r\n                        </div>\r\n                        <h3 className='subtitle'>Choose Amount</h3>\r\n                        <div className='amounts'>\r\n                            {amountOptions.map(amount =>\r\n                                <div className={gameAmount === amount ? 'amountChosen' : 'amount'} onClick={() => setGameAmount(amount)}>{amount}</div>\r\n                            )}\r\n                        </div>\r\n                        <button className='actionB modalB' disabled={creatingGame} onClick={() => createGame()}>{creatingGame ? 'Creating...' : 'Create'} {creatingGame ? <ClipLoader size={13} color='#27244f' /> : null}</button>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='overlay'></div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ActiveGames;\r\n","import React, { useState } from 'react';\r\n\r\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js'\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/UserGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport Game from '../interfaces/Game';\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom';\r\nimport { displayName } from '../utils/displayName';\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\n\r\ninterface Props {\r\n    games: Game[],\r\n    user: User\r\n}\r\n\r\n\r\nfunction UserGames(props: Props) {\r\n    const calculateWinAmount = (amount: number, fee: number) => Math.round(amount * 2 * ((100 - fee) / 100)) / LAMPORTS_PER_SOL\r\n\r\n    return (\r\n        <>\r\n            <table className='UserGames'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Bet</th>\r\n                        <th>Move</th>\r\n                        <th>Opponent</th>\r\n                        <th>Opponent Move</th>\r\n                        <th>Win Amount</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.games.map((game, index) => {\r\n                            if (game.status !== 'ended' || !game.opponent) return\r\n\r\n                            const move = game.creator._id === props.user._id ? game.creatorMove : game.opponentMove\r\n                            const opponent = game.creator._id === props.user._id ? game.opponent : game.creator\r\n                            const opponentMove = game.creator._id === props.user._id ? game.opponentMove : game.creatorMove\r\n                            const winAmount = game.winner ? game.winner._id === props.user._id ? game.amount * 2 / LAMPORTS_PER_SOL : -game.amount / LAMPORTS_PER_SOL : 0\r\n\r\n                            return <tr key={index} className='game' >\r\n                                <td className='date'>{moment(game.updatedAt).format('MMM DD, h:mm A')}</td>\r\n                                <td>{game.amount / LAMPORTS_PER_SOL} SOL</td>\r\n                                <td className='move flip'><Svg src={`/img/move${move}.svg`} /></td>\r\n                                <td><Link className='profileLink' to={`/u/${opponent.publicKey}`}>{shortenAddress(opponent?.publicKey)}</Link></td>\r\n                                <td className='move'><Svg src={`/img/move${opponentMove}.svg`} /></td>\r\n                                <td><span className={winAmount === 0 ? '' : winAmount > 0 ? 'win' : 'lose'}>{winAmount} SOL</span></td>\r\n                            </tr>\r\n                        }\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserGames;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/Profile.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport Game from '../interfaces/Game';\r\nimport UserGames from './UserGames';\r\n\r\nfunction Profile() {\r\n    const { publicKey } = useParams()\r\n    const [user, setUser] = useState<User>()\r\n    const [games, setGames] = useState<Game[]>([])\r\n    const [notFound, setNotFound] = useState(false)\r\n    const [gamesWon, setGamesWon] = useState(0)\r\n    const [gamesLost, setGamesLost] = useState(0)\r\n\r\n    const getUser = async (publicKey: string) => {\r\n        const [responseUser, responseGame] = await Promise.all([axios.get(`/api/u/${publicKey}`), axios.get(`/api/game/u/${publicKey}`)])\r\n        const [user, games] = [responseUser.data, responseGame.data]\r\n\r\n        if (!user) setNotFound(true)\r\n\r\n        setUser(user)\r\n        setGames(games)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUser(undefined)\r\n        if (!publicKey) return\r\n\r\n        getUser(publicKey)\r\n    }, [publicKey])\r\n\r\n    useEffect(() => {\r\n        if (!games || !user) return\r\n\r\n        let gamesWon = 0\r\n        let gamesLost = 0\r\n        games.forEach(game => {\r\n            if (game.status !== 'ended' || !game.winner) return\r\n\r\n            if (game.winner._id === user._id) {\r\n                gamesWon++\r\n            } else {\r\n                gamesLost++\r\n            }\r\n        })\r\n\r\n        setGamesWon(gamesWon)\r\n        setGamesLost(gamesLost)\r\n    }, [user, games])\r\n\r\n    return (\r\n        <div className='Page Profile'>\r\n            {user ? <><div className='box profileBox'>\r\n                <img className='avatar' src='/img/masterchip.png' />\r\n                <div className='rightInfo'>\r\n                    <div className='address'>\r\n                        <h2 className='publicKey'>{user.publicKey}</h2>\r\n                        {/* <a className='scanLink' target=\"_blank\" rel=\"noopener noreferrer\" href={`https://solscan.io/account/${user.publicKey.toString()}`}><img src='/img/solscan.png' /></a> */}\r\n                    </div>\r\n                    <div className='gameStats'>\r\n                        <div className='gameStat'>\r\n                            <h2 className='counter'>{gamesWon}</h2>\r\n                            <h2 className='tag'>Won</h2>\r\n                        </div>\r\n                        <div className='statSeparator'>\r\n                            /\r\n                        </div>\r\n                        <div className='gameStat'>\r\n                            <h2 className='counter'>{gamesLost}</h2>\r\n                            <h2 className='tag'>Lost</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                <UserGames user={user} games={games} /></>\r\n                : !notFound ? <h1>Loading user...</h1> : <h1>User was not found</h1>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default ScrollToTop","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/Profile.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport Game from '../interfaces/Game';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport UserGames from './UserGames';\r\nimport { toast } from 'react-toastify';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CombinedReducer } from '../store';\r\n\r\nfunction MyProfile() {\r\n    const [games, setGames] = useState<Game[]>([])\r\n    const [gamesWon, setGamesWon] = useState(0)\r\n    const [gamesLost, setGamesLost] = useState(0)\r\n    const [user, setUser] = useState<User>()\r\n    const [editData, setEditData] = useState({\r\n        username: ''\r\n    })\r\n    const [editUserModalOpen, setEditUserModalOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const publicKey = useSelector<CombinedReducer, string>((state) => state.user?.publicKey)\r\n\r\n    const editUser = async () => {\r\n        try {\r\n            const newUser = (await axios.post(`/api/u/editUser`, editData)).data\r\n            console.log({ newUser })\r\n\r\n            setUser(user => newUser)\r\n            dispatch({ type: 'LOAD_USER', payload: user })\r\n\r\n            toast.success('Profile has been updated')\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!publicKey) return\r\n\r\n        const getGames = async () => {\r\n            const user: User = (await axios.get(`/api/u/${publicKey}`)).data\r\n            const games: Game[] = (await axios.get(`/api/game/u/${publicKey}`)).data\r\n\r\n            setEditData({\r\n                username: user.username || ''\r\n            })\r\n            setUser(user)\r\n            setGames(games)\r\n        }\r\n\r\n        getGames()\r\n    }, [publicKey])\r\n\r\n    useEffect(() => {\r\n        if (!games || !user) return\r\n\r\n        let gamesWon = 0\r\n        let gamesLost = 0\r\n        games.forEach(game => {\r\n            if (game.status !== 'ended' || !game.winner) return\r\n\r\n            if (game.winner._id === user._id) {\r\n                gamesWon++\r\n            } else {\r\n                gamesLost++\r\n            }\r\n        })\r\n\r\n        setGamesWon(gamesWon)\r\n        setGamesLost(gamesLost)\r\n    }, [user, games])\r\n\r\n    return (\r\n        <>\r\n            {user ?\r\n                <div className='Page Profile'>\r\n                    <div className='profileBox'>\r\n                        <div className='leftInfo'>\r\n                            <Svg className='avatar' src={createAvatar(avatarStyle, { seed: user.publicKey.toString() })} />\r\n                            <button onClick={() => setEditUserModalOpen(true)} className='editB'>Edit Profile</button>\r\n                        </div>\r\n                        <div className='rightInfo'>\r\n                            {user.username ? <div className='username'>\r\n                                <h1 className='value'>{user.username}</h1>\r\n                            </div> : null}\r\n                            <div className='address'>\r\n                                <h2 className='value'>{user.publicKey}</h2>\r\n                                <a className='scanLink' target=\"_blank\" rel=\"noopener noreferrer\" href={`https://solscan.io/account/${user.publicKey.toString()}`}><img src='/img/solscan.png' /></a>\r\n                            </div>\r\n                            <div className='gameStats'>\r\n                                <div className='gameStat'>\r\n                                    <h2>Games Won:</h2>\r\n                                    <h2>{gamesWon}</h2>\r\n                                </div>\r\n                                <div className='statCircle' style={{\r\n                                    backgroundImage: games.length > 0 ? `linear-gradient(#1C1D25, #1C1D25), linear-gradient( 45deg, rgba(37, 185, 0, 0.85), rgba(37, 185, 0, 0.85) ${gamesWon / (gamesWon + gamesLost) * 100}%, rgba(185, 37, 0, 0.85) ${gamesLost / (gamesWon + gamesLost) * 100}% )` : `linear-gradient(#1c1d25, #1c1d25), linear-gradient( 45deg, gray, gray 100% )`\r\n                                }}>\r\n                                </div>\r\n                                <div className='gameStat'>\r\n                                    <h2>Games Lost:</h2>\r\n                                    <h2>{gamesLost}</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {games.length > 0\r\n                        ? <UserGames user={user} games={games} />\r\n                        :\r\n                        null}\r\n                </div>\r\n                : null\r\n            }\r\n            <div className='modal' style={{ display: editUserModalOpen ? 'flex' : 'none' }}>\r\n                <div className='container'>\r\n                    <div className='wrapper'>\r\n                        <button className='closeB' onClick={() => setEditUserModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                        <div className='logo'>\r\n                            <img alt='logo' src='/logo.png' />\r\n                        </div>\r\n                        <h1 className='title'>Edit Profile</h1>\r\n                        <div className='fields'>\r\n                            <input value={editData.username} onInput={(event) => setEditData(data => { return { ...data, username: (event.target as HTMLInputElement).value } })} placeholder='username' />\r\n                        </div>\r\n                        <button onClick={() => editUser()} className='modalB'>Save</button>\r\n                    </div>\r\n                </div>\r\n                <div className='overlay'></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyProfile;","import React, { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/Chat.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../interfaces/Message';\r\nimport { useRef } from 'react';\r\nimport { displayName } from '../utils/displayName';\r\n\r\nfunction Chat() {\r\n    const messagesRef = useRef<null | HTMLDivElement>(null)\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [messages, setMessages] = useState<Message[]>([])\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n    const sockets = useSelector<CombinedReducer, Sockets>((state) => state.sockets)\r\n\r\n    const sendMessage = async () => {\r\n        if (message.length === 0) return toast.error('Message can not be empty')\r\n\r\n        try {\r\n            await axios.post('/api/message', { content: message })\r\n            dispatch({ type: 'UPDATE_USER_LAST_MESSAGE_AT' })\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n\r\n        setMessage('')\r\n    }\r\n\r\n    const scrollMessagesToBottom = () => {\r\n        if (!messagesRef.current) return\r\n\r\n        messagesRef.current.scrollTop = messagesRef.current.scrollHeight\r\n    }\r\n\r\n    const inputMessage = (content: string) => {\r\n        const contentWords = content.split(\" \").map(c => c.trim())\r\n\r\n        setMessage(contentWords.join(\" \"))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const getLast = async () => {\r\n            const messages = (await axios.get('/api/message/last')).data\r\n            console.log({ messages })\r\n\r\n            setMessages(messages)\r\n        }\r\n\r\n        getLast()\r\n        scrollMessagesToBottom()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        scrollMessagesToBottom()\r\n    }, [messages])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!sockets.message) return\r\n\r\n        sockets.message.on('newMessage', (message: Message) => {\r\n            setMessages(old => [message, ...old])\r\n        })\r\n    }, [sockets])\r\n\r\n\r\n    return (\r\n        <div className='Chat box'>\r\n            <div className='chat'>\r\n                <h2 className='chatHeader'>Live Chat</h2>\r\n                <div ref={messagesRef} className='messages'>\r\n                    {messages.map(message =>\r\n                        <div key={message._id} className='message'>\r\n                            <div className='sender'>\r\n                                <img className='avatar' src='/img/masterchip.png' />\r\n                                <Link to={`/u/${message.creator.publicKey}`} className='address profileLink'>{displayName(message.creator)}</Link>\r\n                            </div>\r\n                            <div className='content'>\r\n                                <p className='text'>{message.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    ).reverse()}\r\n                </div>\r\n                <div className='inputMessage'>\r\n                    {user\r\n                        ? Date.now() - user.lastMessageAt > 3000 ?\r\n                            <>\r\n                                <TextareaAutosize onChange={(event) => inputMessage((event.target as HTMLTextAreaElement).value)} onKeyPress={(event) => event.key === 'Enter' ? sendMessage() : null} value={message} placeholder='Type Message...' />\r\n                                <button onClick={() => sendMessage()} className='sendMsgB'><Svg src='/img/send.svg' /></button>\r\n                            </>\r\n                            : <>\r\n                                <TextareaAutosize onChange={(event) => inputMessage((event.target as HTMLTextAreaElement).value)} onKeyPress={(event) => event.key === 'Enter' && Date.now() - user.lastMessageAt > 3000 ? sendMessage() : null} value={message} placeholder='Type Message...' />\r\n                                <Countdown date={user.lastMessageAt + 3000} intervalDelay={0}\r\n                                    precision={1}\r\n                                    renderer={time => (\r\n                                        time.seconds + time.milliseconds > 0 ? <button className='sendMsgB'>{time.seconds}.{time.milliseconds / 100}</button> : <button onClick={() => sendMessage()} className='sendMsgB'><Svg src='/img/send.svg' /></button>\r\n                                    )} />\r\n                            </>\r\n                        : <h4>You have to Log In</h4>}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React from 'react';\r\nimport Chat from './Chat';\r\n\r\nimport '../css/LeftSide.css'\r\nimport Socials from './Socials';\r\n\r\nfunction LeftSide() {\r\n\r\n\r\n    return (\r\n        <div className='LeftSide'>\r\n            <Chat />\r\n            <Socials />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftSide;","import React, { useState } from 'react';\r\n\r\n\r\nimport { LAMPORTS_PER_SOL, } from '@solana/web3.js'\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/ActiveGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport Game from '../interfaces/Game';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment'\r\nimport '../css/RecentGames.css'\r\nimport { displayName } from '../utils/displayName';\r\nimport { useSelector } from 'react-redux';\r\nimport { CombinedReducer } from '../store';\r\nimport axios from 'axios';\r\nimport { useEffect } from 'react';\r\n\r\ninterface Props {\r\n    games: Game[]\r\n}\r\n\r\nfunction RecentGames() {\r\n    const [recentGames, setRecentGames] = useState<Game[]>([])\r\n    const games = useSelector<CombinedReducer, Game[]>((state) => state.games)\r\n\r\n    const loadRecentGames = async () => {\r\n        const recentGames = (await axios.get('/api/game/recentGames')).data\r\n        setRecentGames(recentGames)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadRecentGames()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='recentGamesWrapper box'>\r\n            <h2 className='recentGamesHeader'>Recent Plays</h2>\r\n            <div className='recentGames'>\r\n                {games.map(game => {\r\n                    if (game.status !== 'removed' && game.status !== 'revealed' || !game.opponent) return\r\n\r\n                    if (game.winner) {\r\n                        const loser = game.creator._id === game.winner._id ? game.opponent : game.creator\r\n                        return <div className='recentGame'>\r\n                            <Link className='profileLink' to={`/u/${game.winner.publicKey}`}>{shortenAddress(game.winner.publicKey)}</Link> just <span className='win'>won</span> <span>{game.amount * 2 / LAMPORTS_PER_SOL}</span> SOL against <Link className='profileLink' to={`/u/${loser.publicKey}`}>{shortenAddress(loser.publicKey)}</Link>\r\n                        </div>\r\n                    } else {\r\n                        return <div className='recentGame'>\r\n                            <Link className='profileLink' to={`/u/${game.creator.publicKey}`}>{shortenAddress(game.creator.publicKey)}</Link> had a <span className='draw'>draw</span> with <Link className='profileLink' to={`/u/${game.opponent.publicKey}`}>{shortenAddress(game.opponent.publicKey)}</Link>\r\n                        </div>\r\n                    }\r\n                })}\r\n                {recentGames.map(game => {\r\n                    if (!game.opponent) return\r\n\r\n                    if (game.winner) {\r\n                        const loser = game.creator._id === game.winner._id ? game.opponent : game.creator\r\n                        return <div className='recentGame'>\r\n                            <Link className='profileLink' to={`/u/${game.winner.publicKey}`}>{shortenAddress(game.winner.publicKey)}</Link> <span className='win'>won</span> <span>{game.amount * 2 / LAMPORTS_PER_SOL}</span> SOL against <Link className='profileLink' to={`/u/${loser.publicKey}`}>{shortenAddress(loser.publicKey)}</Link>\r\n                        </div>\r\n                    } else {\r\n                        return <div className='recentGame'>\r\n                            <Link className='profileLink' to={`/u/${game.creator.publicKey}`}>{shortenAddress(game.creator.publicKey)}</Link> had a <span className='draw'>draw</span> with <Link className='profileLink' to={`/u/${game.opponent.publicKey}`}>{shortenAddress(game.opponent.publicKey)}</Link>\r\n                        </div>\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecentGames;","import React from 'react';\r\nimport '../css/RightSide.css'\r\nimport RecentGames from './RecentGames';\r\n\r\nfunction RightSide() {\r\n\r\n\r\n    return (\r\n        <div className='RightSide'>\r\n            <RecentGames />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RightSide;","import React, { useEffect, useMemo } from 'react';\n\n// import Navbar from './components/Navbar'\n// import ActiveGames from './components/ActiveGames'\n\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n} from '@solana/wallet-adapter-wallets';\nimport {\n  WalletModalProvider,\n  WalletMultiButton\n} from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport '@solana/wallet-adapter-react-ui/styles.css'\nimport { io } from \"socket.io-client\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './css/wallet.css'\nimport Navbar from './components/Navbar';\nimport ActiveGames from './components/ActiveGames';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\nimport Profile from './components/Profile';\nimport ScrollToTop from './ScrollToTop';\nimport MyProfile from './components/MyProfile';\nimport LeftSide from './components/LeftSide';\nimport RightSide from './components/RightSide';\n\nimport Svg from 'react-inlinesvg'\n\nconst network = WalletAdapterNetwork.Testnet\n\nfunction App() {\n\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n  const wallets = useMemo(() => [\n    getPhantomWallet(),\n    getSlopeWallet(),\n    getSolflareWallet()\n  ], [network])\n\n  const dispatch = useDispatch()\n\n  window.addEventListener('load', function () {\n    //@ts-ignore\n    if (window.solana) {\n      //@ts-ignore\n      window.solana.on('accountChanged', function () {\n        console.log('account has been changed')\n      })\n    }\n  })\n\n  useEffect(() => {\n    const gameSocket = io(\"/game\")\n    const userSocket = io(\"/user\")\n    const messageSocket = io(\"/message\")\n\n    dispatch({ type: 'LOAD_GAME_SOCKET', payload: gameSocket })\n    dispatch({ type: 'LOAD_USER_SOCKET', payload: userSocket })\n    dispatch({ type: 'LOAD_MESSAGE_SOCKET', payload: messageSocket })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Svg className=\"neoneffect\" src=\"/img/neoneffect.svg\" />\n      <Svg className=\"neoneffect effectbottom\" src=\"/img/neoneffect.svg\" />\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect>\n          <WalletModalProvider>\n            <BrowserRouter>\n              <Navbar />\n              <ScrollToTop />\n              <div className='Body'>\n                <LeftSide />\n                <Routes>\n                  <Route path='/' element={<Navigate to=\"/rps\" />} />\n                  <Route path='/rps' element={<ActiveGames />} />\n                  <Route path='/me' element={<MyProfile />} />\n                  <Route path='/u/:publicKey' element={<Profile />} />\n                </Routes>\n                <RightSide />\n              </div>\n            </BrowserRouter>\n          </WalletModalProvider>\n          <ToastContainer autoClose={1500} />\n        </WalletProvider>\n      </ConnectionProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import User from '../interfaces/User'\r\n\r\nenum UserActions {\r\n    LOAD_USER = 'LOAD_USER',\r\n    UPDATE_USER_BALANCE = 'UPDATE_USER_BALANCE',\r\n    UPDATE_USER_LAST_MESSAGE_AT = 'UPDATE_USER_LAST_MESSAGE_AT'\r\n}\r\n\r\ninterface LoadUserAction {\r\n    type: UserActions.LOAD_USER,\r\n    payload: User\r\n}\r\n\r\ninterface UpdateBalanceAction {\r\n    type: UserActions.UPDATE_USER_BALANCE,\r\n    payload: number\r\n}\r\n\r\ninterface UpdateUserLastMessageAt {\r\n    type: UserActions.UPDATE_USER_LAST_MESSAGE_AT,\r\n    payload: number\r\n}\r\n\r\n\r\ntype UserAction = LoadUserAction | UpdateBalanceAction | UpdateUserLastMessageAt\r\n\r\nexport default (state: User | null = null, action: UserAction): User | null => {\r\n\r\n    switch (action.type) {\r\n        case UserActions.LOAD_USER: {\r\n            return action.payload\r\n        }\r\n        case UserActions.UPDATE_USER_BALANCE: {\r\n            return state && { ...state, balance: state.balance + action.payload }\r\n        }\r\n        case UserActions.UPDATE_USER_LAST_MESSAGE_AT: {\r\n            return state && { ...state, lastMessageAt: Date.now() }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Game from \"../interfaces/Game\"\r\n\r\n\r\nenum GamesActions {\r\n    LOAD_GAMES = 'LOAD_GAMES',\r\n    ADD_GAME = 'ADD_GAME',\r\n    UPDATE_GAME = 'UPDATE_GAME'\r\n}\r\n\r\ninterface LoadGamesAction {\r\n    type: GamesActions.LOAD_GAMES,\r\n    payload: Game[]\r\n}\r\n\r\ninterface AddGameAction {\r\n    type: GamesActions.ADD_GAME,\r\n    payload: Game\r\n}\r\n\r\ninterface UpdateGameAction {\r\n    type: GamesActions.UPDATE_GAME,\r\n    payload: Game\r\n}\r\n\r\n\r\ntype GameAction = LoadGamesAction | AddGameAction | UpdateGameAction\r\n\r\nexport default (state: Game[] = [], action: GameAction): Game[] | Game => {\r\n\r\n    switch (action.type) {\r\n        case GamesActions.LOAD_GAMES: {\r\n            return action.payload\r\n        }\r\n        case GamesActions.ADD_GAME: {\r\n            if (state.find(game => game._id === action.payload._id)) return state\r\n\r\n            return [...state, action.payload]\r\n        }\r\n        case GamesActions.UPDATE_GAME: {\r\n            return state.map(game => {\r\n                if (game._id === action.payload._id) {\r\n                    if (action.payload.status === 'ended') {\r\n                        action.payload.status = 'countdown'\r\n                        action.payload.countDownEnd = Date.now() + 3000\r\n                    }\r\n                    return action.payload\r\n                }\r\n                return game\r\n            })\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { Keypair } from \"@solana/web3.js\"\r\n\r\n\r\nenum AssociatedKeypairActions {\r\n    LOAD_ASSOCIATED_KEYPAIR = 'LOAD_ASSOCIATED_KEYPAIR'\r\n}\r\n\r\ninterface LoadAssociatedKeypairAction {\r\n    type: AssociatedKeypairActions.LOAD_ASSOCIATED_KEYPAIR,\r\n    payload: Keypair\r\n}\r\n\r\n\r\ntype AssociatedKeypairAction = LoadAssociatedKeypairAction\r\n\r\nexport default (state: Keypair | null = null, action: AssociatedKeypairAction): Keypair | null => {\r\n\r\n    switch (action.type) {\r\n        case AssociatedKeypairActions.LOAD_ASSOCIATED_KEYPAIR: {\r\n            return action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { WalletContextState } from \"@solana/wallet-adapter-react\"\r\n\r\nenum WalletActions {\r\n    LOAD_WALLET = 'LOAD_WALLET'\r\n}\r\n\r\ninterface LoadWalletAction {\r\n    type: WalletActions.LOAD_WALLET,\r\n    payload: WalletContextState\r\n}\r\n\r\ntype WalletAction = LoadWalletAction\r\n\r\n\r\n\r\nexport default (state: WalletContextState | null = null, action: WalletAction): WalletContextState | null => {\r\n    switch (action.type) {\r\n        case WalletActions.LOAD_WALLET: {\r\n            return action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { Socket } from \"socket.io-client\"\r\n\r\nenum SocketsActions {\r\n    LOAD_GAME_SOCKET = 'LOAD_GAME_SOCKET',\r\n    LOAD_USER_SOCKET = 'LOAD_USER_SOCKET',\r\n    LOAD_MESSAGE_SOCKET = 'LOAD_MESSAGE_SOCKET'\r\n}\r\n\r\ninterface LoadGameSocketAction {\r\n    type: SocketsActions.LOAD_GAME_SOCKET,\r\n    payload: Socket\r\n}\r\n\r\ninterface LoadUserSocketAction {\r\n    type: SocketsActions.LOAD_USER_SOCKET,\r\n    payload: Socket\r\n}\r\n\r\ninterface LoadMessageSocketAction {\r\n    type: SocketsActions.LOAD_MESSAGE_SOCKET,\r\n    payload: Socket\r\n}\r\n\r\ntype SocketsAction = LoadGameSocketAction | LoadUserSocketAction | LoadMessageSocketAction\r\nexport type Sockets = { 'user'?: Socket, 'game'?: Socket, 'message'?: Socket }\r\n\r\nconst defaultSockets = { 'user': undefined, 'game': undefined, 'message': undefined }\r\n\r\nexport default (state: Sockets = defaultSockets, action: SocketsAction): Sockets => {\r\n    switch (action.type) {\r\n        case SocketsActions.LOAD_GAME_SOCKET: {\r\n            return { ...state, 'game': action.payload }\r\n        }\r\n        case SocketsActions.LOAD_USER_SOCKET: {\r\n            return { ...state, 'user': action.payload }\r\n        }\r\n        case SocketsActions.LOAD_MESSAGE_SOCKET: {\r\n            return { ...state, 'message': action.payload }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { WalletContextState } from '@solana/wallet-adapter-react'\r\nimport { combineReducers, createStore } from 'redux'\r\nimport User from './interfaces/User'\r\nimport userReducer from './reducers/user'\r\nimport gamesReducer from './reducers/games'\r\nimport associatedKeypairReducer from './reducers/associatedKeypair'\r\nimport walletReducer from './reducers/wallet'\r\nimport socketsReducer, { Sockets } from './reducers/sockets'\r\nimport Game from './interfaces/Game'\r\nimport { Keypair } from '@solana/web3.js'\r\n\r\nconst combined = combineReducers({\r\n    user: userReducer,\r\n    wallet: walletReducer,\r\n    associatedKeypair: associatedKeypairReducer,\r\n    games: gamesReducer,\r\n    sockets: socketsReducer\r\n})\r\n\r\nexport interface CombinedReducer {\r\n    user: User,\r\n    wallet: WalletContextState,\r\n    games: Game[],\r\n    associatedKeypair: Keypair,\r\n    sockets: Sockets\r\n}\r\n\r\nexport default createStore(combined)","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const shortenAddress = (publicKey: string): string => {\r\n    return publicKey.slice(0, 5) + '...' + publicKey.slice(-5)\r\n}","import React from 'react';\r\n\r\nimport '../css/Socials.css'\r\nimport Svg from 'react-inlinesvg'\r\n\r\nfunction Socials() {\r\n\r\n    return (\r\n        <div className='Socials' >\r\n            <div className='community'>\r\n                <div className='socialMedia'>\r\n                    <a target='_blank' rel=\"noopener noreferrer\" href='https://discord.gg/pZZWHsRKaJ'><img src='/img/discord.png' /></a>\r\n                </div>\r\n                <div className='socialMedia'>\r\n                    <a target='_blank' rel=\"noopener noreferrer\" href='https://twitter.com/degen_games_sol'><img src='/img/twitter.png' /></a>\r\n                </div>\r\n                <div className='socialMedia'>\r\n                    <a target='_blank' rel=\"noopener noreferrer\" href='https://magiceden.io/marketplace/degengames'><img src='/img/magiceden.png' /></a>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Socials;\r\n"],"sourceRoot":""}