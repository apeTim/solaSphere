{"version":3,"sources":["components/Navbar.tsx","components/TestnetAlert.tsx","components/GameBox.tsx","components/FairnessModal.tsx","components/RecentGames.tsx","components/ActiveGames.tsx","components/Chat.tsx","components/UserGames.tsx","components/Profile.tsx","components/Fairness.tsx","ScrollToTop.tsx","components/Footer.tsx","App.tsx","reducers/user.ts","reportWebVitals.ts","reducers/associatedKeypair.ts","reducers/wallet.ts","reducers/sockets.ts","store.ts","index.tsx","utils/shortenAddress.ts"],"names":["messageToSign","Uint8Array","from","Buffer","connection","Connection","clusterApiUrl","authPublicKey","PublicKey","Navbar","wallet","useWallet","useState","isAskedToVerify","setIsAskedToVerify","isLoggedIn","setIsLoggedIn","depositModalOpen","setDepositModalOpen","depositAmount","setDepositAmount","depositStatus","setDepositStatus","withdrawModalOpen","setWithdrawModalOpen","withdrawAmount","setWithdrawAmount","withdrawnAmount","setWithdrawnAmount","balanceChanged","setBalanceChanged","withdrawStatus","setWithdrawStatus","pendingAmount","setPendingAmount","prevBalance","setPrevBalance","dispatch","useDispatch","user","useSelector","state","associatedKeypair","sockets","connectUser","a","console","log","type","payload","loadAssociatedKeypair","connectSocket","axios","get","withCredentials","data","associatedKp","Keypair","fromSecretKey","secretKey","emit","_id","on","amount","fromDeposit","deposit","publicKey","LAMPORTS_PER_SOL","toast","error","transaction","Transaction","add","SystemProgram","transfer","fromPubkey","toPubkey","lamports","sendTransaction","response","message","toString","withdraw","getBalance","feePayer","signers","requestWithdraw","balance","post","Promise","resolve","setTimeout","getAssociatedKeypairBalance","openWithdrawModel","balanace","useEffect","signMessage","authenticated","toBase58","toBytes","signedMessage","Array","signAndAuth","className","to","src","isActive","data-balancechanged","onAnimationEnd","Number","toFixed","onClick","createAvatar","avatarStyle","seed","shortenAddress","style","display","width","height","d","alt","value","onChange","event","input","inputDepositAmount","target","size","color","inputWithdrawAmount","disabled","TestnetAlert","GameBox","props","game","setGame","coinSpins","changeGameStatus","status","winner","removeGame","joinGame","creator","gameId","success","cancelGame","creatorChoice","date","countDownEnd","onComplete","renderer","time","seconds","id","result","undefined","spinIndex","parseInt","privateSeedHash","length","getCoinAnimation","opponent","FairnessModal","closeFairnessModal","privateSeed","blockhash","RecentGames","gameForFairness","setGameForFairness","games","map","activeStatuses","ActiveGames","activeGames","setActiveGames","recentGames","setRecentGames","userGames","setUserGames","openGames","setOpenGames","createGameModalOpen","setCreateGameModalOpen","gameAmount","setgameAmount","chosenCoin","setChosenCoin","createGame","gameToRemove","old","filter","slice","all","getGamesData","updatedGame","Date","now","gameUpdate","forEach","push","includes","inputgameAmount","Chat","messagesRef","useRef","setMessage","messages","setMessages","sendMessage","content","scrollMessagesToBottom","current","scrollTop","scrollHeight","inputMessage","contentWords","split","c","trim","join","getLast","ref","reverse","lastMessageAt","onKeyPress","key","placeholder","intervalDelay","precision","milliseconds","UserGames","moment","createdAt","format","charAt","toUpperCase","Math","round","fee","Profile","useParams","setUser","setGames","notFound","setNotFound","gamesWon","setGamesWon","gamesLost","setGamesLost","getUser","rel","href","backgroundImage","Fairness","ScrollToTop","pathname","useLocation","window","scrollTo","Footer","network","WalletAdapterNetwork","Testnet","App","UserActions","endpoint","useMemo","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","gameSocket","io","userSocket","messageSocket","ConnectionProvider","WalletProvider","autoConnect","path","element","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AssociatedKeypairActions","WalletActions","SocketsActions","defaultSockets","combined","combineReducers","action","LOAD_USER","UPDATE_USER_BALANCE","UPDATE_USER_LAST_MESSAGE_AT","LOAD_WALLET","LOAD_ASSOCIATED_KEYPAIR","LOAD_GAME_SOCKET","LOAD_USER_SOCKET","LOAD_MESSAGE_SOCKET","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.8654d1cc.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useWallet, useAnchorWallet, WalletContextState } from '@solana/wallet-adapter-react';\r\nimport { io } from \"socket.io-client\"\r\nimport axios from 'axios';\r\n\r\nimport user from '../interfaces/User';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { sendAndConfirmTransaction, clusterApiUrl, TokenAccountsFilter } from '@solana/web3.js'\r\nimport { Token, TOKEN_PROGRAM_ID, } from '@solana/spl-token'\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\n\r\nimport '../css/Navbar.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport TestnetAlert from './TestnetAlert';\r\n\r\nconst messageToSign = Uint8Array.from(Buffer.from('I agree with Terms & Services of solasphere'))\r\n\r\nconst connection = new Connection(\r\n    clusterApiUrl('testnet'),\r\n    'confirmed',\r\n);\r\n\r\nconst authPublicKey = new PublicKey('68a5pCnjnshTw3JXmht5j9rCJH9e9mzmguwQE8LighJX')\r\n\r\nfunction Navbar() {\r\n\r\n    const wallet = useWallet()\r\n    const [isAskedToVerify, setIsAskedToVerify] = useState(false)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [depositModalOpen, setDepositModalOpen] = useState(false)\r\n    const [depositAmount, setDepositAmount] = useState<number | null>(0)\r\n    const [depositStatus, setDepositStatus] = useState('none')\r\n    const [withdrawModalOpen, setWithdrawModalOpen] = useState(false)\r\n    const [withdrawAmount, setWithdrawAmount] = useState<number | null>(0)\r\n    const [withdrawnAmount, setWithdrawnAmount] = useState<number | null>(0)\r\n    const [balanceChanged, setBalanceChanged] = useState('0')\r\n    const [withdrawStatus, setWithdrawStatus] = useState('none')\r\n    const [pendingAmount, setPendingAmount] = useState(0)\r\n    const [prevBalance, setPrevBalance] = useState<number | null>(null)\r\n    const dispatch = useDispatch()\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n    const associatedKeypair = useSelector<CombinedReducer, Keypair>((state) => state.associatedKeypair)\r\n    const sockets = useSelector<CombinedReducer, Sockets>((state) => state.sockets)\r\n\r\n    const connectUser = async (user: User) => {\r\n        console.log({ wallet })\r\n        dispatch({ type: 'LOAD_WALLET', payload: wallet })\r\n        dispatch({ type: 'LOAD_USER', payload: user })\r\n        loadAssociatedKeypair()\r\n        connectSocket(user)\r\n        return setIsLoggedIn(true)\r\n    }\r\n\r\n    const loadAssociatedKeypair = async () => {\r\n        const associatedKeypair = (await axios.get('/api/u/associatedKeypair', { withCredentials: true })).data\r\n        const associatedKp = Keypair.fromSecretKey(Uint8Array.from(associatedKeypair.secretKey))\r\n        dispatch({ type: 'LOAD_ASSOCIATED_KEYPAIR', payload: associatedKp })\r\n    }\r\n\r\n    const connectSocket = (user: User) => {\r\n        if (!(sockets && sockets.user)) return\r\n\r\n        sockets.user.emit('subscribeToProfile', user._id)\r\n        sockets.user.on('balanceChange', (amount, fromDeposit) => {\r\n            dispatch({ type: 'UPDATE_USER_BALANCE', payload: amount })\r\n            console.log({ amount, fromDeposit, depositModalOpen })\r\n\r\n            if (fromDeposit) setDepositStatus('validated')\r\n        })\r\n    }\r\n\r\n    const inputDepositAmount = (input: string) => {\r\n        if (!input) return setDepositAmount(null)\r\n        console.log({ input })\r\n        if (Number(input) >= 0) setDepositAmount(Number(input) * LAMPORTS_PER_SOL)\r\n        else setDepositAmount(0)\r\n    }\r\n    const inputWithdrawAmount = (input: string) => {\r\n        if (!input) return setWithdrawAmount(null)\r\n        console.log({ input })\r\n        if (Number(input) >= 0) setWithdrawAmount(Number(input) * LAMPORTS_PER_SOL)\r\n        else setWithdrawAmount(0)\r\n    }\r\n\r\n    const deposit = async () => {\r\n        if (!(wallet && wallet.publicKey && depositAmount)) return\r\n\r\n        if (depositAmount < 0.01 * LAMPORTS_PER_SOL) return toast.error('Minimum deposit amount is 0.01')\r\n\r\n        try {\r\n            const transaction = new Transaction().add(\r\n                SystemProgram.transfer({\r\n                    fromPubkey: wallet.publicKey,\r\n                    toPubkey: authPublicKey,\r\n                    lamports: depositAmount\r\n                })\r\n            )\r\n\r\n            await wallet.sendTransaction(transaction, connection)\r\n            console.log({ transaction })\r\n            setDepositStatus('sent')\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n            setDepositStatus('failed')\r\n        }\r\n    }\r\n\r\n    const withdraw = async () => {\r\n        if (!(wallet && wallet.publicKey)) return\r\n\r\n        setWithdrawStatus('withdrawing')\r\n\r\n        const amount = await connection.getBalance(associatedKeypair.publicKey)\r\n        const transaction = new Transaction().add(\r\n            SystemProgram.transfer({\r\n                fromPubkey: associatedKeypair.publicKey,\r\n                toPubkey: new PublicKey(user.publicKey),\r\n                lamports: amount\r\n            })\r\n        )\r\n        transaction.feePayer = new PublicKey(user.publicKey)\r\n\r\n        await wallet.sendTransaction(transaction, connection, { signers: [associatedKeypair] })\r\n\r\n        setWithdrawnAmount(amount)\r\n        setWithdrawStatus('withdrawn')\r\n    }\r\n\r\n    const requestWithdraw = async () => {\r\n        if (!(wallet && wallet.publicKey && withdrawAmount)) return\r\n\r\n        if (withdrawAmount < 0.01 * LAMPORTS_PER_SOL) return toast.error(\"Minimum withdraw is 0.01 SOLs\")\r\n        if (withdrawAmount > user.balance) return toast.error(\"Balance needs to be higher than the withdraw amount\")\r\n\r\n        try {\r\n            setWithdrawStatus('withdrawing')\r\n            setPendingAmount(withdrawAmount)\r\n            await axios.post('/api/u/requestWithdraw', { amount: withdrawAmount })\r\n            while (await connection.getBalance(associatedKeypair.publicKey) < withdrawAmount) {\r\n                await new Promise((resolve) => setTimeout(() => resolve(1), 100))\r\n            }\r\n            withdraw()\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    const getAssociatedKeypairBalance = async () => {\r\n        return connection.getBalance(associatedKeypair.publicKey)\r\n    }\r\n\r\n    const openWithdrawModel = async () => {\r\n        const balanace = await getAssociatedKeypairBalance()\r\n        if (balanace > 0.01) {\r\n            setPendingAmount(balanace)\r\n            setWithdrawStatus('hasPending')\r\n        } else {\r\n            setWithdrawStatus('none')\r\n        }\r\n        setWithdrawModalOpen(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const signAndAuth = async (wallet: WalletContextState) => {\r\n            try {\r\n                if (!wallet || !wallet.signMessage || !wallet.publicKey || isAskedToVerify) return\r\n                setIsAskedToVerify(true)\r\n\r\n                let { authenticated, user } = (await axios.get('/api/auth/state')).data\r\n                console.log({ authenticated })\r\n                if (authenticated) {\r\n                    if (user.publicKey === wallet.publicKey.toBase58()) {\r\n                        await connectUser(user)\r\n                        return\r\n                    }\r\n                    console.log('PUBLIC KEYS ARE NOT THE SAME!')\r\n                    await axios.get('/api/auth/logout')\r\n                }\r\n\r\n                const publicKey = wallet.publicKey.toBytes()\r\n                const signedMessage = await wallet.signMessage(messageToSign)\r\n\r\n                user = (await axios.post('/api/auth/login', { publicKey: Array.from(publicKey), signedMessage: Array.from(signedMessage) }, { withCredentials: true })).data\r\n\r\n                await connectUser(user)\r\n            } catch (e: any) {\r\n                toast.error(e.response.data.message.toString())\r\n                console.log(e)\r\n            }\r\n        }\r\n\r\n        signAndAuth(wallet)\r\n    }, [wallet])\r\n\r\n    useEffect(() => {\r\n        if (!user) return\r\n        if (prevBalance != null) {\r\n            console.log('Balance Update!', user.balance - prevBalance)\r\n            if (user.balance - prevBalance >= 0) {\r\n                setBalanceChanged('1')\r\n            } else {\r\n                setBalanceChanged('-1')\r\n            }\r\n        }\r\n        setPrevBalance(user.balance)\r\n    }, [user?.balance])\r\n\r\n    return (\r\n        <div className='Navbar' >\r\n            <TestnetAlert />\r\n            <div className='navbar'>\r\n                <div className='left'>\r\n                    <Link to='/' className='logo'>\r\n                        <img src='/logo.png' />\r\n                        <h3 className='title'>solasphere</h3>\r\n                    </Link>\r\n                    <div className='navLinks'>\r\n                        <NavLink to='/coinflip' className={({ isActive }) => (isActive ? 'activeNavLink' : 'inactiveNavLink')}>\r\n                            <p className='title'>Coinflip</p>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    isLoggedIn && wallet?.publicKey\r\n                        ? (\r\n                            <div className='user'>\r\n                                <div className='balance'>\r\n                                    <Svg src='/img/coins.svg' />\r\n                                    <h4 data-balancechanged={balanceChanged} onAnimationEnd={() => setBalanceChanged('0')} className='amount'>{Number((user?.balance / LAMPORTS_PER_SOL).toFixed(5))}</h4>\r\n                                </div>\r\n                                <button onClick={() => { setDepositModalOpen(true); setDepositStatus('none') }} className='depositB'>Deposit</button>\r\n                                <button onClick={() => openWithdrawModel()} className='withdrawB'>Withdraw</button>\r\n                                <Link to={`/u/${wallet.publicKey.toString()}`} className='profile'>\r\n                                    <Svg src={createAvatar(avatarStyle, { seed: wallet.publicKey.toString() })} />\r\n                                    <h4>{shortenAddress(wallet.publicKey.toBase58())}</h4>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                        : (\r\n                            <WalletMultiButton />\r\n                        )\r\n                }\r\n                <div className='modal' style={{ display: depositModalOpen ? 'flex' : 'none' }}>\r\n                    <div className='container'>\r\n                        <div className='wrapper'>\r\n                            <button className='closeB' onClick={() => setDepositModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                            <div className='logo'>\r\n                                <img alt='logo' src='/logo.png' />\r\n                            </div>\r\n                            <h1 className='title'>Deposit</h1>\r\n                            {\r\n                                depositStatus === 'none' ?\r\n                                    <>\r\n                                        <input type=\"number\" value={depositAmount === null ? '' : depositAmount / LAMPORTS_PER_SOL} onChange={(event) => inputDepositAmount((event.target as HTMLInputElement).value)} />\r\n                                        <button className='depositB' onClick={() => deposit()}>Deposit</button></>\r\n                                    :\r\n                                    depositStatus === 'sent' ?\r\n                                        <>\r\n                                            <h3 className='status'>Validating <ClipLoader size={13} color='#443f89' /></h3>\r\n                                        </> : depositStatus === 'validated' ? <h3 className='status'>Succesfully validated</h3> : <h3 className='status'>Failed</h3>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='overlay'></div>\r\n                </div>\r\n                <div className='modal' style={{ display: withdrawModalOpen ? 'flex' : 'none' }}>\r\n                    <div className='container'>\r\n                        <div className='wrapper'>\r\n                            <button className='closeB' onClick={() => setWithdrawModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                            <div className='logo'>\r\n                                <img alt='logo' src='/logo.png' />\r\n                            </div>\r\n                            <h1 className='title'>Withdraw</h1>\r\n                            {\r\n                                withdrawStatus === 'none'\r\n                                    ?\r\n                                    <>\r\n                                        <input type=\"number\" value={withdrawAmount === null ? '' : withdrawAmount / LAMPORTS_PER_SOL} onChange={(event) => inputWithdrawAmount((event.target as HTMLInputElement).value)} />\r\n                                        <button className='depositB' onClick={() => requestWithdraw()}>Withdraw</button></>\r\n                                    :\r\n                                    withdrawStatus === 'hasPending' || withdrawStatus === 'withdrawing' ?\r\n                                        <div className='pending'>\r\n                                            <h2>Pending: {pendingAmount / LAMPORTS_PER_SOL} SOL</h2>\r\n                                            <button className='depositB' disabled={withdrawStatus === 'withdrawing'} onClick={() => withdraw()}><span className='withdrawLabel'>Withdraw</span> {withdrawStatus === 'withdrawing' ? <ClipLoader size={13} color='#27244f' /> : null}</button>\r\n                                        </div> : withdrawStatus === 'withdrawn' ?\r\n                                            <h2>Succesfully withdrawn {withdrawnAmount ? withdrawnAmount / LAMPORTS_PER_SOL : null}</h2>\r\n                                            : <h3 className='status'>Failed</h3>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='overlay'></div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useWallet, useAnchorWallet, WalletContextState } from '@solana/wallet-adapter-react';\r\nimport { io } from \"socket.io-client\"\r\nimport axios from 'axios';\r\n\r\nimport user from '../interfaces/User';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { sendAndConfirmTransaction, clusterApiUrl, TokenAccountsFilter } from '@solana/web3.js'\r\nimport { Token, TOKEN_PROGRAM_ID, } from '@solana/spl-token'\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\n\r\nimport '../css/TestnetAlert.css'\r\n\r\nfunction TestnetAlert() {\r\n\r\n    return (\r\n        <div className='TestnetAlert' >\r\n            <div className='alert'>\r\n                We Are Currently Live In The Testnet Only\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default TestnetAlert;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/ActiveGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    game: Game,\r\n    removeGame: (game: Game) => void\r\n}\r\n\r\nfunction GameBox(props: Props) {\r\n    const [game, setGame] = useState<Game>()\r\n    const [countDownEnd, setCountdownEnd] = useState<number>(0)\r\n\r\n    const wallet = useWallet()\r\n    const coinSpins = [\r\n        ['spin1080', 'spin1440', 'spin1800', 'spin2160'],\r\n        ['spin900', 'spin1260', 'spin1620', 'spin1980']\r\n    ]\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n\r\n    useEffect(() => {\r\n        setGame(props.game)\r\n    }, [props.game])\r\n\r\n    const getCoinAnimation = (game: Game): string => {\r\n        if (game.result === null || game.result === undefined) throw 'Game is not loaded'\r\n\r\n        const spinIndex = parseInt(game.privateSeedHash, 36) % coinSpins[game.result].length\r\n\r\n        return coinSpins[game.result][spinIndex]\r\n    }\r\n\r\n    const changeGameStatus = (status: string) => {\r\n        if (!game) return\r\n        if (game.status === status) return\r\n\r\n        if (game.winner?._id === user._id && status === 'revealed') dispatch({ type: 'UPDATE_USER_BALANCE', payload: game.amount * 2 })\r\n\r\n        if (status === 'revealed') {\r\n            setTimeout(() => {\r\n                props.removeGame(game)\r\n            }, 2000)\r\n        }\r\n\r\n        setGame({ ...game, status })\r\n    }\r\n\r\n    const joinGame = async () => {\r\n        if (!(wallet && wallet.publicKey && game)) return\r\n\r\n        if (user._id === game.creator._id) return toast.error('You can not join your game')\r\n        if (user.balance < game.amount) return toast.error('Balance needs to be higher than the game bet')\r\n\r\n        try {\r\n            await axios.post('/api/game/join', {\r\n                gameId: game._id\r\n            })\r\n\r\n            toast.success('Joined the game')\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    const cancelGame = async () => {\r\n        if (!(wallet && wallet.publicKey && game)) return\r\n\r\n        if (game.creator._id !== user._id) return toast.error('You can not cancel another person`s game')\r\n\r\n        try {\r\n            await axios.post('/api/game/cancel', {\r\n                gameId: game._id\r\n            })\r\n\r\n            toast.success('Game has been cancelled')\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {game && game.status !== 'ended' ? <div key={game._id} className='gameWrapper'>\r\n                <div className=\"players\">\r\n                    <div className='playerWrapper'>\r\n                        <div className={game.status !== 'revealed' ? 'player' : game.winner?._id == game.creator._id ? 'player winner' : 'player loser'}>\r\n                            <img className='avatar' src={`./img/coin${game.creatorChoice}.png`} />\r\n                            <Link to={`/u/${game.creator.publicKey}`} className='address'>{shortenAddress(game.creator.publicKey)}</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className='middle'>\r\n                        {game.status === 'active' || game.status === 'joined'\r\n                            ? <h3 className='vsTag'>VS</h3>\r\n                            : game.status === 'countdown' ?\r\n                                <>\r\n                                    <Countdown date={game.countDownEnd} onComplete={() => changeGameStatus('flipping')} renderer={time => <h3>{time.seconds}</h3>} /></>\r\n                                :\r\n                                <div onAnimationEnd={() => changeGameStatus('revealed')} id=\"coinFlip\" className={getCoinAnimation(game)}>\r\n                                    <div className=\"coin0\"><img src='./img/coin0.png' /></div>\r\n                                    <div className=\"coin1\"><img src='./img/coin1.png' /></div>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <div className='playerWrapper'>\r\n                        <div className={game.status !== 'revealed' ? 'player' : game.winner?._id == game.opponent?._id ? 'player winner' : 'player loser'}>\r\n                            {game.opponent ?\r\n                                <>\r\n                                    <img className='avatar' src={`./img/coin${1 - game.creatorChoice}.png`} />\r\n                                    <Link to={`/u/${game.opponent.publicKey}`} className='address'>{shortenAddress(game.opponent.publicKey)}</Link>\r\n                                </> :\r\n                                <>\r\n                                    <Svg className='avatarPlaceholder' src='/img/playerPlaceholder.svg' />\r\n                                    <h3 className='address'>waiting...</h3>\r\n                                </>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='info'>\r\n                    <div className='bet'>\r\n                        <h3>{game.amount / LAMPORTS_PER_SOL}</h3>\r\n                        <Svg src='./img/coins.svg' />\r\n                    </div>\r\n\r\n                    {!game.opponent && user ?\r\n                        game.creator._id === user._id ?\r\n                            <button className='deleteB' onClick={() => cancelGame()}><Svg src='/img/bin.svg' /></button>\r\n                            :\r\n                            <button onClick={() => joinGame()} className='joinB'>Join</button>\r\n                        : <></>\r\n                    }\r\n                </div>\r\n            </div> : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GameBox;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport Game from '../interfaces/Game';\r\nimport '../css/Modal.css'\r\nimport '../css/FairnessModal.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    game: Game,\r\n    closeFairnessModal: () => void\r\n}\r\n\r\nfunction FairnessModal(props: Props) {\r\n\r\n    return (\r\n        <div className='modal' style={{ display: 'flex' }} >\r\n            <div className='container'>\r\n                <div className='wrapper'>\r\n                    <button className='closeB' onClick={() => props.closeFairnessModal()}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                    <div className='logo'>\r\n                        <img alt='logo' src='/logo.png' />\r\n                    </div>\r\n                    <h1 className='title'>Fairness</h1>\r\n                    <div className='fairness'>\r\n                        <div className='field'>\r\n                            <h4>Creator Public Key</h4>\r\n                            <p>{props.game.creator.publicKey}</p>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <h4>Opponent Public Key</h4>\r\n                            <p>{props.game.opponent?.publicKey}</p>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <h4>Private Seed</h4>\r\n                            <p>{props.game.privateSeed}</p>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <h4>Private Seed Hash</h4>\r\n                            <p>{props.game.privateSeedHash}</p>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <h4>Solana Blockhash</h4>\r\n                            <p>{props.game.blockhash}</p>\r\n                        </div>\r\n                        <Link className='readMore' to='/fairness'>Read More</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='overlay'></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FairnessModal;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/ActiveGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../css/RecentGames.css'\r\nimport FairnessModal from './FairnessModal';\r\n\r\ninterface Props {\r\n    games: Game[]\r\n}\r\n\r\nfunction RecentGames(props: Props) {\r\n    const [gameForFairness, setGameForFairness] = useState<Game | null>()\r\n\r\n    const closeFairnessModal = () => {\r\n        setGameForFairness(null)\r\n    }\r\n\r\n    return (\r\n        <div className='recentGamesWrapper'>\r\n            <table className='recentGames'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Creator</th>\r\n                        <th>Opponent</th>\r\n                        <th>Bet</th>\r\n                        <th>Result</th>\r\n                        <th>Winner</th>\r\n                        <th>Provably Fair</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.games.map(game =>\r\n                        game.opponent && game.winner && game.result !== null ?\r\n                            <tr key={game._id} className='recentGame'>\r\n                                <td><div className=\"user tdContent\"> <Link to={`/u/${game.creator.publicKey}`}> <Svg src={createAvatar(avatarStyle, { seed: game.creator.publicKey })} /> <p className='publicKey'>{shortenAddress(game.creator.publicKey)}</p></Link></div></td>\r\n                                <td><div className=\"user tdContent\"><Link to={`/u/${game.opponent.publicKey}`}><Svg src={createAvatar(avatarStyle, { seed: game.opponent.publicKey })} />  <p className='publicKey'>{shortenAddress(game.opponent.publicKey)}</p></Link></div></td>\r\n                                <td><div className=\"bet tdContent\">{game.amount / LAMPORTS_PER_SOL} <Svg src='./img/coins.svg' /></div></td>\r\n                                <td><div className=\"coin tdContent\"><img src={`./img/coin${game.result}.png`} /></div></td>\r\n                                <td><div className='user tdContent'> <Link to={`/u/${game.winner.publicKey}`}> <Svg src={createAvatar(avatarStyle, { seed: game.winner.publicKey })} /> <p className='publicKey'>{shortenAddress(game.winner.publicKey)}</p></Link></div></td>\r\n                                <td><button onClick={() => setGameForFairness(game)} className='openFairnessB'>Fairness</button></td>\r\n                            </tr> : null)}\r\n                </tbody>\r\n            </table>\r\n            {gameForFairness ? <FairnessModal game={gameForFairness} closeFairnessModal={closeFairnessModal} /> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecentGames;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport '../css/ActiveGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport GameBox from './GameBox';\r\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\r\n\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport Svg from 'react-inlinesvg'\r\nimport { Link } from 'react-router-dom';\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport RecentGames from './RecentGames';\r\n\r\nconst activeStatuses = ['active', 'joined', 'countdown', 'flipping']\r\n\r\nfunction ActiveGames() {\r\n\r\n    const wallet = useWallet()\r\n    const [activeGames, setActiveGames] = useState<Game[]>([])\r\n    const [recentGames, setRecentGames] = useState<Game[]>([])\r\n    const [userGames, setUserGames] = useState<Game[]>([])\r\n    const [openGames, setOpenGames] = useState<Game[]>([])\r\n    const [createGameModalOpen, setCreateGameModalOpen] = useState(false)\r\n    const [gameAmount, setgameAmount] = useState<number | null>(0)\r\n    const [depositStatus, setDepositStatus] = useState('none')\r\n    const [chosenCoin, setChosenCoin] = useState(0)\r\n\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n    const sockets = useSelector<CombinedReducer, Sockets>((state) => state.sockets)\r\n\r\n    const inputgameAmount = (input: string) => {\r\n        if (!input) return setgameAmount(null)\r\n        console.log({ input })\r\n        if (Number(input) >= 0) setgameAmount(Number(input) * LAMPORTS_PER_SOL)\r\n        else setgameAmount(0)\r\n    }\r\n\r\n    const createGame = async () => {\r\n        if (!(wallet && wallet.publicKey && gameAmount)) return\r\n\r\n        if (user.balance < gameAmount) return toast.error('Balance needs to be higher than the game bet')\r\n\r\n        try {\r\n            await axios.post('/api/game', {\r\n                amount: gameAmount,\r\n                creatorChoice: chosenCoin\r\n            })\r\n\r\n            toast.success('Game created')\r\n            setCreateGameModalOpen(false)\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    const gameUpdate = (updatedGame: Game) => {\r\n        setActiveGames(old => old.map(game => {\r\n            if (game._id === updatedGame._id) {\r\n                if (updatedGame.status === 'ended') {\r\n                    updatedGame.status = 'countdown'\r\n                    updatedGame.countDownEnd = Date.now() + 3000\r\n                }\r\n                console.log(updatedGame)\r\n                return updatedGame\r\n            }\r\n            return game\r\n        }))\r\n    }\r\n\r\n    const removeGame = (gameToRemove: Game) => {\r\n\r\n        setActiveGames(old => old.filter(game => game._id !== gameToRemove._id))\r\n        setRecentGames(old => [gameToRemove, ...old.slice(0, 30)])\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const getGamesData = async () => {\r\n            const [activeGames, recentGames] = await Promise.all([\r\n                axios.get('/api/game/allActive'),\r\n                axios.get('/api/game/lastEnded')\r\n            ])\r\n\r\n            console.log({ activeGames: activeGames.data })\r\n            setActiveGames(activeGames.data)\r\n            setRecentGames(recentGames.data)\r\n        }\r\n\r\n        getGamesData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!sockets.game) return\r\n\r\n        sockets.game.on('newGame', (game: Game) => setActiveGames(old => [...old, game]))\r\n        sockets.game.on('gameUpdate', (updatedGame: Game) => gameUpdate(updatedGame))\r\n\r\n    }, [sockets.game])\r\n\r\n    useEffect(() => {\r\n        let userGames: Game[] = []\r\n        let openGames: Game[] = []\r\n        activeGames.forEach(game => {\r\n            if (game.status !== 'ended' && game.status !== 'cancelled') {\r\n                game.creator._id === user?._id ? userGames.push(game) : openGames.push(game)\r\n            }\r\n        })\r\n        setUserGames(userGames)\r\n        setOpenGames(openGames)\r\n    }, [user, activeGames])\r\n\r\n    return (\r\n        <div className='ActiveGames' >\r\n            <div className=\"typeWrapper\">\r\n                <div className='type'>\r\n                    <h2 className='typeHeader'>My Games</h2>\r\n                    <h2 className='gamesCounter'>{userGames.length}</h2>\r\n                </div>\r\n                {user ? <button className='createGameB' onClick={() => setCreateGameModalOpen(true)}>Create New <Svg src='/img/create.svg' /></button> : null}\r\n            </div>\r\n            {userGames.length > 0 ? <div className='games'>\r\n                {userGames.map(game => {\r\n                    return activeStatuses.includes(game.status) ? (\r\n                        <GameBox key={game._id} game={game} removeGame={removeGame} />\r\n                    ) : null\r\n                })}\r\n            </div> : <div className='typePlaceHolder'><p>Your CoinFlip games will appear here</p></div>}\r\n            <div className='type'>\r\n                <h2 className='typeHeader'>Open Games</h2>\r\n                <h2 className='gamesCounter'>{openGames.length}</h2>\r\n            </div>\r\n            {openGames.length > 0 ? <div className='games'>\r\n                {openGames.map(game => {\r\n                    return activeStatuses.includes(game.status) ? (\r\n                        <GameBox key={game._id} game={game} removeGame={removeGame} />\r\n                    ) : null\r\n                })}\r\n            </div> : <div className='typePlaceHolder'><p>No open Coinflip games at the moment</p></div>}\r\n            <div className='type'>\r\n                <h2 className='typeHeader'>Recent Games</h2>\r\n                <h2 className='gamesCounter'>{recentGames.length}</h2>\r\n            </div>\r\n            <RecentGames games={recentGames} />\r\n            <div className='modal' style={{ display: createGameModalOpen ? 'flex' : 'none' }}>\r\n                <div className='container'>\r\n                    <div className='wrapper'>\r\n                        <button className='closeB' onClick={() => setCreateGameModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                        <div className='logo'>\r\n                            <img alt='logo' src='./logo.png' />\r\n                        </div>\r\n                        <h1 className='title'>Create Game</h1>\r\n                        {\r\n                            depositStatus === 'none' ?\r\n                                <>\r\n                                    <div className='coinChooser'>\r\n                                        <img onClick={() => setChosenCoin(0)} className={chosenCoin === 0 ? 'chosen' : ''} src='./img/coin0.png' />\r\n                                        <img onClick={() => setChosenCoin(1)} className={chosenCoin === 1 ? 'chosen' : ''} src='./img/coin1.png' />\r\n                                    </div>\r\n                                    <input type=\"number\" value={gameAmount === null ? '' : gameAmount / LAMPORTS_PER_SOL} onChange={(event) => inputgameAmount((event.target as HTMLInputElement).value)} />\r\n                                    <button className='depositB' onClick={() => createGame()}>Create</button></>\r\n                                :\r\n                                depositStatus === 'sent' ?\r\n                                    <>\r\n                                        <h3 className='status'>Your deposit was sent <br />It will be validated within 60 seconds</h3>\r\n                                    </> : <h3 className='status'>Failed</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='overlay'></div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ActiveGames;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/Chat.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../interfaces/Message';\r\nimport { Socket } from 'socket.io-client';\r\nimport { useRef } from 'react';\r\n\r\nfunction Chat() {\r\n    const messagesRef = useRef<null | HTMLDivElement>(null)\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [messageBlock, setMessageBlock] = useState(false)\r\n    const [messages, setMessages] = useState<Message[]>([])\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n    const sockets = useSelector<CombinedReducer, Sockets>((state) => state.sockets)\r\n\r\n    const sendMessage = async () => {\r\n        if (message.length === 0) return toast.error('Message can not be empty')\r\n\r\n        try {\r\n            await axios.post('/api/message', { content: message })\r\n            dispatch({ type: 'UPDATE_USER_LAST_MESSAGE_AT' })\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n\r\n        setMessage('')\r\n    }\r\n\r\n    const scrollMessagesToBottom = () => {\r\n        if (!messagesRef.current) return\r\n\r\n        messagesRef.current.scrollTop = messagesRef.current.scrollHeight\r\n    }\r\n\r\n    const inputMessage = (content: string) => {\r\n        const contentWords = content.split(\" \").map(c => c.trim())\r\n\r\n        setMessage(contentWords.join(\" \"))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const getLast = async () => {\r\n            const messages = (await axios.get('/api/message/last')).data\r\n            console.log({ messages })\r\n\r\n            setMessages(messages)\r\n        }\r\n\r\n        getLast()\r\n        scrollMessagesToBottom()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        scrollMessagesToBottom()\r\n    }, [messages])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!sockets.message) return\r\n\r\n        sockets.message.on('newMessage', (message: Message) => {\r\n            setMessages(old => [message, ...old])\r\n        })\r\n    }, [sockets])\r\n\r\n\r\n    return (\r\n        <div className='Chat'>\r\n            <div className='chat'>\r\n                <div className='chatHeader'>\r\n                    <h2>Chat</h2>\r\n                </div>\r\n                <div ref={messagesRef} className='messages'>\r\n                    {messages.map(message =>\r\n                        <div key={message._id} className='message'>\r\n                            <div className='avatar'><Svg className='avatar' src={createAvatar(avatarStyle, { seed: message.creator.publicKey })} /></div>\r\n                            <div className='content'>\r\n                                <Link to={`/u/${message.creator.publicKey}`} className='address'>{shortenAddress(message.creator.publicKey)}</Link>\r\n                                <p className='text'>{message.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    ).reverse()}\r\n                </div>\r\n                <div className='inputMessage'>\r\n                    {user\r\n                        ? Date.now() - user.lastMessageAt > 3000 ?\r\n                            <>\r\n                                <TextareaAutosize onChange={(event) => inputMessage((event.target as HTMLTextAreaElement).value)} onKeyPress={(event) => event.key === 'Enter' ? sendMessage() : null} value={message} placeholder='Type Message...' />\r\n                                <button onClick={() => sendMessage()} className='sendMsgB'><Svg src='/img/send.svg' /></button>\r\n                            </>\r\n                            : <>\r\n                                <TextareaAutosize onChange={(event) => inputMessage((event.target as HTMLTextAreaElement).value)} onKeyPress={(event) => event.key === 'Enter' && Date.now() - user.lastMessageAt > 3000 ? sendMessage() : null} value={message} placeholder='Type Message...' />\r\n                                <Countdown date={user.lastMessageAt + 3000} intervalDelay={0}\r\n                                    precision={1}\r\n                                    renderer={time => (\r\n                                        time.seconds + time.milliseconds > 0 ? <button className='sendMsgB'>{time.seconds}.{time.milliseconds / 100}</button> : <button onClick={() => sendMessage()} className='sendMsgB'><Svg src='/img/send.svg' /></button>\r\n                                    )} />\r\n                            </>\r\n                        : <h4>You have to Log In</h4>}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/UserGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom';\r\nimport FairnessModal from './FairnessModal';\r\n\r\ninterface Props {\r\n    games: Game[],\r\n    user: User\r\n}\r\n\r\nfunction UserGames(props: Props) {\r\n    const [gameForFairness, setGameForFairness] = useState<Game | null>()\r\n\r\n    const closeFairnessModal = () => {\r\n        setGameForFairness(null)\r\n    }\r\n    return (\r\n        <>\r\n            <table className='UserGames'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Bet</th>\r\n                        <th>Picked Side</th>\r\n                        <th>Opponent</th>\r\n                        <th>Result</th>\r\n                        <th>Win Amount</th>\r\n                        <th>Provably Fair</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.games.map(game =>\r\n                            <tr className='game'>\r\n                                <td>{moment(game.createdAt).format('lll')}</td>\r\n                                <td ><div className='tdContent bet'>{game.amount / LAMPORTS_PER_SOL} <Svg src='/img/coins.svg' /></div></td>\r\n                                <td><div className='tdContent coin'><img src={`/img/coin${game.creator._id === props.user._id ? game.creatorChoice : 1 - game.creatorChoice}.png`} /> </div></td>\r\n                                <td>{game.creator._id === props.user._id ? (game.opponent ? <Link to={`/u/${game.opponent.publicKey}`}>{shortenAddress(game.opponent.publicKey)}</Link> : '-') : <Link to={`/u/${game.creator.publicKey}`}>{shortenAddress(game.creator.publicKey)}</Link>}</td>\r\n                                <td><div className='tdContent coin'>{game.status === 'ended' ? <img src={`/img/coin${game.result}.png`} /> : game.status.charAt(0).toUpperCase() + game.status.slice(1)}</div></td>\r\n                                <td>{game.status === 'ended' ? game.winner?._id === props.user._id ? <span className='win'>{Math.round(game.amount * 2 * ((100 - game.fee) / 100)) / LAMPORTS_PER_SOL}</span> : <span className='lose'>{-game.amount / LAMPORTS_PER_SOL}</span> : 0}</td>\r\n                                <td><button onClick={() => setGameForFairness(game)} className='openFairnessB'>Fairness</button></td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            {gameForFairness ? <FairnessModal game={gameForFairness} closeFairnessModal={closeFairnessModal} /> : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserGames;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/Profile.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport moment from 'moment'\r\nimport UserGames from './UserGames';\r\n\r\nfunction Profile() {\r\n    const { publicKey } = useParams()\r\n    const [user, setUser] = useState<User>()\r\n    const [games, setGames] = useState<Game[]>([])\r\n    const [notFound, setNotFound] = useState(false)\r\n    const [gamesWon, setGamesWon] = useState(0)\r\n    const [gamesLost, setGamesLost] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (!publicKey) return\r\n\r\n        const getUser = async (publicKey: string) => {\r\n            const user: User = (await axios.get(`/api/u/${publicKey}`)).data\r\n            const games: Game[] = (await axios.get(`/api/game/u/${publicKey}`)).data\r\n\r\n            if (!user) setNotFound(true)\r\n\r\n            setUser(user)\r\n            setGames(games)\r\n        }\r\n\r\n        getUser(publicKey)\r\n    }, [publicKey])\r\n\r\n    useEffect(() => {\r\n        if (!games || !user) return\r\n\r\n        let gamesWon = 0\r\n        let gamesLost = 0\r\n        games.forEach(game => {\r\n            if (game.status !== 'ended' || !game.winner) return\r\n\r\n            if (game.winner._id === user._id) {\r\n                gamesWon++\r\n            } else {\r\n                gamesLost++\r\n            }\r\n        })\r\n\r\n        setGamesWon(gamesWon)\r\n        setGamesLost(gamesLost)\r\n    }, [user, games])\r\n\r\n    return (\r\n        <>\r\n            {user ?\r\n                <div className='Profile'>\r\n                    <div className='profileBox'>\r\n                        <Svg className='avatar' src={createAvatar(avatarStyle, { seed: user.publicKey.toString() })} />\r\n                        <div className='info'>\r\n                            <div className='address'>\r\n                                <h1>{user.publicKey}</h1>\r\n                                <a className='scanLink' target=\"_blank\" rel=\"noopener noreferrer\" href={`https://solscan.io/account/${user.publicKey.toString()}`}><img src='/img/solscan.png' /></a>\r\n                            </div>\r\n                            <div className='gameStats'>\r\n                                <div className='gameStat'>\r\n                                    <h2>Games Won:</h2>\r\n                                    <h2>{gamesWon}</h2>\r\n                                </div>\r\n                                <div className='statCircle' style={{\r\n                                    backgroundImage: games.length > 0 ? `linear-gradient(#1C1D25, #1C1D25), linear-gradient( 45deg, rgba(37, 185, 0, 0.85), rgba(37, 185, 0, 0.85) ${gamesWon / (gamesWon + gamesLost) * 100}%, rgba(185, 37, 0, 0.85) ${gamesLost / (gamesWon + gamesLost) * 100}% )` : `linear-gradient(#041b37, #041b37), linear-gradient( 45deg, gray, gray 100% )`\r\n                                }}>\r\n                                </div>\r\n                                <div className='gameStat'>\r\n                                    <h2>Games Lost:</h2>\r\n                                    <h2>{gamesLost}</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {games.length > 0\r\n                        ? <UserGames user={user} games={games} />\r\n                        :\r\n                        null}\r\n                </div>\r\n                : null\r\n            }\r\n            {notFound ? <div className='Profile'><h1 className='notFound'>User was not found</h1> </div> : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport '../css/Fairness.css';\r\n\r\nfunction Fairness() {\r\n\r\n    return (\r\n        <div className='Fairness' >\r\n            <h1>Fairness</h1>\r\n            <p>Solasphere project is built on trust. We want everything to be clear and fair. We are here for a long-term game.</p>\r\n            <h1>Result Algorithm</h1>\r\n            <p>Our system generates the result for each round by using the SHA-256 hash of 4 separate inputs</p>\r\n            <ol className='hashInputs'>\r\n                <li>Game Creator Public Key</li>\r\n                <li>Game Opponent Public Key</li>\r\n                <li>Private Seed (cryptographically secure random number in hex format)</li>\r\n                <li>Solana Head Block Hash</li>\r\n            </ol>\r\n            <p>\r\n                Last 2 inputs plays the most important part. <br />\r\n                <span className='term'>Private Seed</span> ensures that the game result will be truly random and it is generated with the game creation. We dont reveal it until the end, but you can check that it was not changed by hashing and comparing it with \"privateSeedHash\". \"privateSeedHash\" is always visible. <br />\r\n                Using  <span className='term'>Solana Blockchash</span> solasphere proves that even we can't predict the result. Because this value can't be known in advance.\r\n            </p>\r\n            <h1>Check Fairness</h1>\r\n            <p>You can execute Python code that checks fairness straight from your browser with <a target='_blank' rel=\"nofollow noopener\" href='https://replit.com/@ApeTim/Solasphere-Coinflip-Fairness'>Fairness checker</a>. Just replace the inputs to correct ones. And you will see that the result will be the same. If you have any questions about this system, feel free to contact our support team.</p>\r\n            <div className='fairnessCode'>\r\n                <p>\r\n                    from hashlib import sha256 <br />\r\n                    <br />\r\n                    coins = {'{0: \"Blue Coin\", 1: \"Orange Coin\"}'}<br />\r\n                    <br />\r\n                    creator_public_key = \"INPUT\"<br />\r\n                    opponent_publick_key = \"INPUT\"<br />\r\n                    private_seed = \"INPUT\"<br />\r\n                    private_seed_hash = \"INPUT\"<br />\r\n                    solana_block_hash = \"INPUT\"<br />\r\n                    <br />\r\n                    if sha256(private_seed.encode('utf-8')).hexdigest() != private_seed_hash: <br />\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;print(\"Private Seed was changed\")\r\n                    <br />\r\n                    else: <br />\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;seed = {'f\"{creator_public_key}-{opponent_publick_key}-{private_seed}-{solana_block_hash}\"'}<br />\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;resultHash = sha256(seed.encode('utf-8')).hexdigest()[:8]<br />\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;resultInt = int(resultHash, 16)<br />\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;result = resultInt % 2<br />\r\n                    <br />\r\n                    print(f\"Game Result is: {'{coins[result]}\"'})<br />\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Fairness;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default ScrollToTop","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useWallet, useAnchorWallet, WalletContextState } from '@solana/wallet-adapter-react';\r\nimport { io } from \"socket.io-client\"\r\nimport axios from 'axios';\r\n\r\nimport user from '../interfaces/User';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { sendAndConfirmTransaction, clusterApiUrl, TokenAccountsFilter } from '@solana/web3.js'\r\nimport { Token, TOKEN_PROGRAM_ID, } from '@solana/spl-token'\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\n\r\nimport '../css/Footer.css'\r\nimport Svg from 'react-inlinesvg'\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <div className='Footer' >\r\n            <div className='community'>\r\n                <div className='socialMedia'>\r\n                    <a target='_blank' rel=\"noopener noreferrer\" href='https://discord.gg'><Svg src='/img/discord.svg' /></a>\r\n                </div>\r\n                <div className='socialMedia'>\r\n                    <a target='_blank' rel=\"noopener noreferrer\" href='https://twitter.com/solasphereNFT'><Svg src='/img/twitter.svg' /></a>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useMemo } from 'react';\n\n// import Navbar from './components/Navbar'\n// import ActiveGames from './components/ActiveGames'\n\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n} from '@solana/wallet-adapter-wallets';\nimport {\n  WalletModalProvider,\n  WalletMultiButton\n} from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport '@solana/wallet-adapter-react-ui/styles.css'\nimport { io } from \"socket.io-client\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './css/wallet.css'\nimport Navbar from './components/Navbar';\nimport ActiveGames from './components/ActiveGames';\nimport Chat from './components/Chat';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\nimport Profile from './components/Profile';\nimport Fairness from './components/Fairness';\nimport ScrollToTop from './ScrollToTop';\nimport Footer from './components/Footer';\nimport TestnetAlert from './components/TestnetAlert';\n\nconst network = WalletAdapterNetwork.Testnet\n\nfunction App() {\n\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n  const wallets = useMemo(() => [\n    getPhantomWallet(),\n    getSlopeWallet(),\n    getSolflareWallet()\n  ], [network])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const gameSocket = io(\"/game\")\n    const userSocket = io(\"/user\")\n    const messageSocket = io(\"/message\")\n\n    dispatch({ type: 'LOAD_GAME_SOCKET', payload: gameSocket })\n    dispatch({ type: 'LOAD_USER_SOCKET', payload: userSocket })\n    dispatch({ type: 'LOAD_MESSAGE_SOCKET', payload: messageSocket })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect>\n          <WalletModalProvider>\n            <BrowserRouter>\n              <Navbar />\n              <ScrollToTop />\n              <div className='Body'>\n                <Routes>\n                  <Route path='/' element={<Navigate to=\"/coinflip\" />} />\n                  <Route path='/coinflip' element={<ActiveGames />} />\n                  <Route path='/fairness' element={<Fairness />} />\n                  <Route path='/u/:publicKey' element={<Profile />} />\n                </Routes>\n                <Chat />\n              </div>\n              <Footer />\n            </BrowserRouter>\n          </WalletModalProvider>\n          <ToastContainer autoClose={1500} />\n        </WalletProvider>\n      </ConnectionProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import User from '../interfaces/User'\r\n\r\nenum UserActions {\r\n    LOAD_USER = 'LOAD_USER',\r\n    UPDATE_USER_BALANCE = 'UPDATE_USER_BALANCE',\r\n    UPDATE_USER_LAST_MESSAGE_AT = 'UPDATE_USER_LAST_MESSAGE_AT'\r\n}\r\n\r\ninterface LoadUserAction {\r\n    type: UserActions.LOAD_USER,\r\n    payload: User\r\n}\r\n\r\ninterface UpdateBalanceAction {\r\n    type: UserActions.UPDATE_USER_BALANCE,\r\n    payload: number\r\n}\r\n\r\ninterface UpdateUserLastMessageAt {\r\n    type: UserActions.UPDATE_USER_LAST_MESSAGE_AT,\r\n    payload: number\r\n}\r\n\r\n\r\ntype UserAction = LoadUserAction | UpdateBalanceAction | UpdateUserLastMessageAt\r\n\r\nexport default (state: User | null = null, action: UserAction): User | null => {\r\n\r\n    switch (action.type) {\r\n        case UserActions.LOAD_USER: {\r\n            return action.payload\r\n        }\r\n        case UserActions.UPDATE_USER_BALANCE: {\r\n            console.log('prev balance:', state?.balance)\r\n            console.log('balance change: ', action.payload)\r\n            return state && { ...state, balance: state.balance + action.payload }\r\n        }\r\n        case UserActions.UPDATE_USER_LAST_MESSAGE_AT: {\r\n            return state && { ...state, lastMessageAt: Date.now() }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Keypair } from \"@solana/web3.js\"\r\n\r\n\r\nenum AssociatedKeypairActions {\r\n    LOAD_ASSOCIATED_KEYPAIR = 'LOAD_ASSOCIATED_KEYPAIR'\r\n}\r\n\r\ninterface LoadAssociatedKeypairAction {\r\n    type: AssociatedKeypairActions.LOAD_ASSOCIATED_KEYPAIR,\r\n    payload: Keypair\r\n}\r\n\r\n\r\ntype AssociatedKeypairAction = LoadAssociatedKeypairAction\r\n\r\nexport default (state: Keypair | null = null, action: AssociatedKeypairAction): Keypair | null => {\r\n\r\n    switch (action.type) {\r\n        case AssociatedKeypairActions.LOAD_ASSOCIATED_KEYPAIR: {\r\n            return action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { WalletContextState } from \"@solana/wallet-adapter-react\"\r\n\r\nenum WalletActions {\r\n    LOAD_WALLET = 'LOAD_WALLET'\r\n}\r\n\r\ninterface LoadWalletAction {\r\n    type: WalletActions.LOAD_WALLET,\r\n    payload: WalletContextState\r\n}\r\n\r\ntype WalletAction = LoadWalletAction\r\n\r\n\r\n\r\nexport default (state: WalletContextState | null = null, action: WalletAction): WalletContextState | null => {\r\n    switch (action.type) {\r\n        case WalletActions.LOAD_WALLET: {\r\n            return action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { Socket } from \"socket.io-client\"\r\n\r\nenum SocketsActions {\r\n    LOAD_GAME_SOCKET = 'LOAD_GAME_SOCKET',\r\n    LOAD_USER_SOCKET = 'LOAD_USER_SOCKET',\r\n    LOAD_MESSAGE_SOCKET = 'LOAD_MESSAGE_SOCKET'\r\n}\r\n\r\ninterface LoadGameSocketAction {\r\n    type: SocketsActions.LOAD_GAME_SOCKET,\r\n    payload: Socket\r\n}\r\n\r\ninterface LoadUserSocketAction {\r\n    type: SocketsActions.LOAD_USER_SOCKET,\r\n    payload: Socket\r\n}\r\n\r\ninterface LoadMessageSocketAction {\r\n    type: SocketsActions.LOAD_MESSAGE_SOCKET,\r\n    payload: Socket\r\n}\r\n\r\ntype SocketsAction = LoadGameSocketAction | LoadUserSocketAction | LoadMessageSocketAction\r\nexport type Sockets = { 'user'?: Socket, 'game'?: Socket, 'message'?: Socket }\r\n\r\nconst defaultSockets = { 'user': undefined, 'game': undefined, 'message': undefined }\r\n\r\nexport default (state: Sockets = defaultSockets, action: SocketsAction): Sockets => {\r\n    switch (action.type) {\r\n        case SocketsActions.LOAD_GAME_SOCKET: {\r\n            return { ...state, 'game': action.payload }\r\n        }\r\n        case SocketsActions.LOAD_USER_SOCKET: {\r\n            return { ...state, 'user': action.payload }\r\n        }\r\n        case SocketsActions.LOAD_MESSAGE_SOCKET: {\r\n            return { ...state, 'message': action.payload }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { WalletContextState } from '@solana/wallet-adapter-react'\r\nimport { combineReducers, createStore } from 'redux'\r\nimport User from './interfaces/User'\r\nimport userReducer from './reducers/user'\r\nimport associatedKeypairReducer from './reducers/associatedKeypair'\r\nimport walletReducer from './reducers/wallet'\r\nimport socketsReducer, { Sockets } from './reducers/sockets'\r\nimport { Keypair } from '@solana/web3.js'\r\n\r\nconst combined = combineReducers({\r\n    user: userReducer,\r\n    wallet: walletReducer,\r\n    associatedKeypair: associatedKeypairReducer,\r\n    sockets: socketsReducer\r\n})\r\n\r\nexport interface CombinedReducer {\r\n    user: User,\r\n    wallet: WalletContextState,\r\n    associatedKeypair: Keypair,\r\n    sockets: Sockets\r\n}\r\nexport default createStore(combined)","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const shortenAddress = (publicKey: string): string => {\r\n    return publicKey.slice(0, 5) + '...' + publicKey.slice(-5)\r\n}"],"sourceRoot":""}