{"version":3,"sources":["components/Navbar.tsx","components/GameBox.tsx","components/ActiveGames.tsx","components/Chat.tsx","components/UserGames.tsx","components/Profile.tsx","App.tsx","reducers/user.ts","reportWebVitals.ts","reducers/associatedKeypair.ts","reducers/wallet.ts","reducers/sockets.ts","store.ts","index.tsx","utils/shortenAddress.ts"],"names":["messageToSign","Uint8Array","from","Buffer","connection","Connection","clusterApiUrl","authPublicKey","PublicKey","Navbar","wallet","useWallet","useState","isAskedToVerify","setIsAskedToVerify","isLoggedIn","setIsLoggedIn","depositModalOpen","setDepositModalOpen","depositAmount","setDepositAmount","depositStatus","setDepositStatus","withdrawModalOpen","setWithdrawModalOpen","withdrawAmount","setWithdrawAmount","withdrawnAmount","setWithdrawnAmount","balanceChanged","setBalanceChanged","withdrawStatus","setWithdrawStatus","pendingAmount","setPendingAmount","prevBalance","setPrevBalance","dispatch","useDispatch","user","useSelector","state","associatedKeypair","sockets","connectUser","a","type","payload","loadAssociatedKeypair","connectSocket","axios","get","withCredentials","data","associatedKp","Keypair","fromSecretKey","secretKey","emit","_id","on","amount","fromDeposit","console","log","deposit","publicKey","LAMPORTS_PER_SOL","toast","error","transaction","Transaction","add","SystemProgram","transfer","fromPubkey","toPubkey","lamports","sendTransaction","response","message","toString","withdraw","getBalance","feePayer","signers","requestWithdraw","balance","post","Promise","resolve","setTimeout","getAssociatedKeypairBalance","openWithdrawModel","balanace","useEffect","signMessage","authenticated","toBase58","toBytes","signedMessage","Array","signAndAuth","className","to","src","data-balancechanged","onAnimationEnd","Number","toFixed","onClick","createAvatar","avatarStyle","seed","shortenAddress","style","display","width","height","d","alt","value","onChange","event","input","inputDepositAmount","target","size","color","inputWithdrawAmount","disabled","GameBox","props","game","setGame","coinSpins","changeGameStatus","status","winner","removeGame","joinGame","creator","gameId","success","cancelGame","creatorChoice","date","Date","now","onComplete","renderer","time","seconds","id","result","undefined","spinIndex","parseInt","privateSeedHash","length","getCoinAnimation","opponent","activeStatuses","ActiveGames","activeGames","setActiveGames","recentGames","setRecentGames","userGames","setUserGames","openGames","setOpenGames","createGameModalOpen","setCreateGameModalOpen","gameAmount","setgameAmount","chosenCoin","setChosenCoin","createGame","gameToRemove","old","filter","slice","all","getGamesData","updatedGame","map","gameUpdate","forEach","push","includes","inputgameAmount","Chat","messagesRef","useRef","setMessage","messages","setMessages","sendMessage","content","scrollMessagesToBottom","current","scrollTop","scrollHeight","getLast","ref","contentWords","split","c","trim","join","inputMessage","onKeyPress","key","placeholder","UserGames","games","moment","createdAt","format","charAt","toUpperCase","privateSeed","blockhash","Profile","useParams","setUser","setGames","notFound","setNotFound","gamesWon","setGamesWon","gamesLost","setGamesLost","getUser","rel","href","backgroundImage","network","WalletAdapterNetwork","Devnet","App","UserActions","endpoint","useMemo","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","gameSocket","io","userSocket","messageSocket","ConnectionProvider","WalletProvider","autoConnect","path","element","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AssociatedKeypairActions","WalletActions","SocketsActions","defaultSockets","combined","combineReducers","action","LOAD_USER","UPDATE_USER_BALANCE","LOAD_WALLET","LOAD_ASSOCIATED_KEYPAIR","LOAD_GAME_SOCKET","LOAD_USER_SOCKET","LOAD_MESSAGE_SOCKET","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.eb765dcd.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useWallet, useAnchorWallet, WalletContextState } from '@solana/wallet-adapter-react';\r\nimport { io } from \"socket.io-client\"\r\nimport axios from 'axios';\r\n\r\nimport user from '../interfaces/User';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { sendAndConfirmTransaction, clusterApiUrl, TokenAccountsFilter } from '@solana/web3.js'\r\nimport { Token, TOKEN_PROGRAM_ID, } from '@solana/spl-token'\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\n\r\nimport '../css/Navbar.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst messageToSign = Uint8Array.from(Buffer.from('I agree with Terms & Services of CookiMania.'))\r\n\r\nconst connection = new Connection(\r\n    clusterApiUrl('devnet'),\r\n    'confirmed',\r\n);\r\n\r\nconst authPublicKey = new PublicKey('68a5pCnjnshTw3JXmht5j9rCJH9e9mzmguwQE8LighJX')\r\n\r\nfunction Navbar() {\r\n\r\n    const wallet = useWallet()\r\n    const [isAskedToVerify, setIsAskedToVerify] = useState(false)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [depositModalOpen, setDepositModalOpen] = useState(false)\r\n    const [depositAmount, setDepositAmount] = useState<number | null>(0)\r\n    const [depositStatus, setDepositStatus] = useState('none')\r\n    const [withdrawModalOpen, setWithdrawModalOpen] = useState(false)\r\n    const [withdrawAmount, setWithdrawAmount] = useState<number | null>(0)\r\n    const [withdrawnAmount, setWithdrawnAmount] = useState<number | null>(0)\r\n    const [balanceChanged, setBalanceChanged] = useState('0')\r\n    const [withdrawStatus, setWithdrawStatus] = useState('none')\r\n    const [pendingAmount, setPendingAmount] = useState(0)\r\n    const [prevBalance, setPrevBalance] = useState<number | null>(null)\r\n    const dispatch = useDispatch()\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n    const associatedKeypair = useSelector<CombinedReducer, Keypair>((state) => state.associatedKeypair)\r\n    const sockets = useSelector<CombinedReducer, Sockets>((state) => state.sockets)\r\n\r\n    const connectUser = async (user: User) => {\r\n        dispatch({ type: 'LOAD_WALLET', payload: wallet })\r\n        dispatch({ type: 'LOAD_USER', payload: user })\r\n        loadAssociatedKeypair()\r\n        connectSocket(user)\r\n        return setIsLoggedIn(true)\r\n    }\r\n\r\n    const loadAssociatedKeypair = async () => {\r\n        const associatedKeypair = (await axios.get('/api/u/associatedKeypair', { withCredentials: true })).data\r\n        const associatedKp = Keypair.fromSecretKey(Uint8Array.from(associatedKeypair.secretKey))\r\n        dispatch({ type: 'LOAD_ASSOCIATED_KEYPAIR', payload: associatedKp })\r\n    }\r\n\r\n    const connectSocket = (user: User) => {\r\n        if (!(sockets && sockets.user)) return\r\n\r\n        sockets.user.emit('subscribeToProfile', user._id)\r\n        sockets.user.on('balanceChange', (amount, fromDeposit) => {\r\n            dispatch({ type: 'UPDATE_USER_BALANCE', payload: amount })\r\n            console.log({ amount, fromDeposit, depositModalOpen })\r\n\r\n            if (fromDeposit) setDepositStatus('validated')\r\n        })\r\n    }\r\n\r\n    const inputDepositAmount = (input: string) => {\r\n        if (!input) return setDepositAmount(null)\r\n        console.log({ input })\r\n        if (Number(input) >= 0) setDepositAmount(Number(input) * LAMPORTS_PER_SOL)\r\n        else setDepositAmount(0)\r\n    }\r\n    const inputWithdrawAmount = (input: string) => {\r\n        if (!input) return setWithdrawAmount(null)\r\n        console.log({ input })\r\n        if (Number(input) >= 0) setWithdrawAmount(Number(input) * LAMPORTS_PER_SOL)\r\n        else setWithdrawAmount(0)\r\n    }\r\n\r\n    const deposit = async () => {\r\n        if (!(wallet && wallet.publicKey && depositAmount)) return\r\n\r\n        if (depositAmount < 0.01 * LAMPORTS_PER_SOL) return toast.error('Minimum deposit amount is 0.01')\r\n\r\n        try {\r\n            const transaction = new Transaction().add(\r\n                SystemProgram.transfer({\r\n                    fromPubkey: wallet.publicKey,\r\n                    toPubkey: authPublicKey,\r\n                    lamports: depositAmount\r\n                })\r\n            )\r\n\r\n            await wallet.sendTransaction(transaction, connection)\r\n            console.log({ transaction })\r\n            setDepositStatus('sent')\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n            setDepositStatus('failed')\r\n        }\r\n    }\r\n\r\n    const withdraw = async () => {\r\n        if (!(wallet && wallet.publicKey)) return\r\n\r\n        setWithdrawStatus('withdrawing')\r\n\r\n        const amount = await connection.getBalance(associatedKeypair.publicKey)\r\n        const transaction = new Transaction().add(\r\n            SystemProgram.transfer({\r\n                fromPubkey: associatedKeypair.publicKey,\r\n                toPubkey: new PublicKey(user.publicKey),\r\n                lamports: amount\r\n            })\r\n        )\r\n        transaction.feePayer = new PublicKey(user.publicKey)\r\n\r\n        await wallet.sendTransaction(transaction, connection, { signers: [associatedKeypair] })\r\n\r\n        setWithdrawnAmount(amount)\r\n        setWithdrawStatus('withdrawn')\r\n    }\r\n\r\n    const requestWithdraw = async () => {\r\n        if (!(wallet && wallet.publicKey && withdrawAmount)) return\r\n\r\n        if (withdrawAmount < 0.01 * LAMPORTS_PER_SOL) return toast.error(\"Minimum withdraw is 0.01 SOLs\")\r\n        if (withdrawAmount > user.balance) return toast.error(\"Balance needs to be higher than the withdraw amount\")\r\n\r\n        try {\r\n            setWithdrawStatus('withdrawing')\r\n            setPendingAmount(withdrawAmount)\r\n            await axios.post('/api/u/requestWithdraw', { amount: withdrawAmount })\r\n            await new Promise((resolve) => setTimeout(() => resolve(1), 1000))\r\n            withdraw()\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    const getAssociatedKeypairBalance = async () => {\r\n        return connection.getBalance(associatedKeypair.publicKey)\r\n    }\r\n\r\n    const openWithdrawModel = async () => {\r\n        const balanace = await getAssociatedKeypairBalance()\r\n        if (balanace > 0.01) {\r\n            setPendingAmount(balanace)\r\n            setWithdrawStatus('hasPending')\r\n        } else {\r\n            setWithdrawStatus('none')\r\n        }\r\n        setWithdrawModalOpen(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const signAndAuth = async (wallet: WalletContextState) => {\r\n            try {\r\n                if (!wallet || !wallet.signMessage || !wallet.publicKey || isAskedToVerify) return\r\n                setIsAskedToVerify(true)\r\n\r\n                let { authenticated, user } = (await axios.get('/api/auth/state')).data\r\n                console.log({ authenticated })\r\n                if (authenticated) {\r\n                    if (user.publicKey === wallet.publicKey.toBase58()) {\r\n                        await connectUser(user)\r\n                        return\r\n                    }\r\n                    console.log('PUBLIC KEYS ARE NOT THE SAME!')\r\n                    await axios.get('/api/auth/logout')\r\n                }\r\n\r\n                const publicKey = wallet.publicKey.toBytes()\r\n                const signedMessage = await wallet.signMessage(messageToSign)\r\n\r\n                user = (await axios.post('/api/auth/login', { publicKey: Array.from(publicKey), signedMessage: Array.from(signedMessage) }, { withCredentials: true })).data\r\n\r\n                await connectUser(user)\r\n            } catch (e: any) {\r\n                toast.error(e.response.data.message.toString())\r\n                console.log(e)\r\n            }\r\n        }\r\n\r\n        signAndAuth(wallet)\r\n    }, [wallet])\r\n\r\n    useEffect(() => {\r\n        if (!user) return\r\n        if (prevBalance != null) {\r\n            console.log('Balance Update!', user.balance - prevBalance)\r\n            if (user.balance - prevBalance >= 0) {\r\n                setBalanceChanged('1')\r\n            } else {\r\n                setBalanceChanged('-1')\r\n            }\r\n        }\r\n        setPrevBalance(user.balance)\r\n    }, [user?.balance])\r\n\r\n    return (\r\n        <div className='Navbar' >\r\n            <div className='logo'>\r\n                <Link to='/'><img src='/logo.png' /></Link>\r\n                <h3 className='title'>solasphere</h3>\r\n            </div>\r\n            {\r\n                isLoggedIn && wallet?.publicKey\r\n                    ? (\r\n                        <div className='user'>\r\n                            <div className='balance'>\r\n                                <img src='/img/coins.png' />\r\n                                <h4 data-balancechanged={balanceChanged} onAnimationEnd={() => setBalanceChanged('0')} className='amount'>{Number((user?.balance / LAMPORTS_PER_SOL).toFixed(5))}</h4>\r\n                            </div>\r\n                            <button onClick={() => { setDepositModalOpen(true); setDepositStatus('none') }} className='depositB'>Deposit</button>\r\n                            <button onClick={() => openWithdrawModel()} className='withdrawB'>Withdraw</button>\r\n                            <Link to={`/u/${wallet.publicKey.toString()}`} className='profile'>\r\n                                <Svg src={createAvatar(avatarStyle, { seed: wallet.publicKey.toString() })} />\r\n                                <h4>{shortenAddress(wallet.publicKey.toBase58())}</h4>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        <WalletMultiButton />\r\n                    )\r\n            }\r\n            <div className='modal' style={{ display: depositModalOpen ? 'flex' : 'none' }}>\r\n                <div className='container'>\r\n                    <div className='wrapper'>\r\n                        <button className='closeB' onClick={() => setDepositModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                        <div className='logo'>\r\n                            <img alt='logo' src='/logo.png' />\r\n                        </div>\r\n                        <h1 className='title'>Deposit</h1>\r\n                        {\r\n                            depositStatus === 'none' ?\r\n                                <>\r\n                                    <input type=\"number\" value={depositAmount === null ? '' : depositAmount / LAMPORTS_PER_SOL} onChange={(event) => inputDepositAmount((event.target as HTMLInputElement).value)} />\r\n                                    <button className='depositB' onClick={() => deposit()}>Deposit</button></>\r\n                                :\r\n                                depositStatus === 'sent' ?\r\n                                    <>\r\n                                        <h3 className='status'>Validating <ClipLoader size={13} color='#27244f' /></h3>\r\n                                    </> : depositStatus === 'validated' ? <h3 className='status'>Succesfully validated</h3> : <h3 className='status'>Failed</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='overlay'></div>\r\n            </div>\r\n            <div className='modal' style={{ display: withdrawModalOpen ? 'flex' : 'none' }}>\r\n                <div className='container'>\r\n                    <div className='wrapper'>\r\n                        <button className='closeB' onClick={() => setWithdrawModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                        <div className='logo'>\r\n                            <img alt='logo' src='/logo.png' />\r\n                        </div>\r\n                        <h1 className='title'>Withdraw</h1>\r\n                        {\r\n                            withdrawStatus === 'none'\r\n                                ?\r\n                                <>\r\n                                    <input type=\"number\" value={withdrawAmount === null ? '' : withdrawAmount / LAMPORTS_PER_SOL} onChange={(event) => inputWithdrawAmount((event.target as HTMLInputElement).value)} />\r\n                                    <button className='depositB' onClick={() => requestWithdraw()}>Withdraw</button></>\r\n                                :\r\n                                withdrawStatus === 'hasPending' || withdrawStatus === 'withdrawing' ?\r\n                                    <div className='pending'>\r\n                                        <h2>Pending: {pendingAmount / LAMPORTS_PER_SOL} SOL</h2>\r\n                                        <button className='depositB' disabled={withdrawStatus === 'withdrawing'} onClick={() => withdraw()}><span className='withdrawLabel'>Withdraw</span> {withdrawStatus === 'withdrawing' ? <ClipLoader size={13} color='#27244f' /> : null}</button>\r\n                                    </div> : withdrawStatus === 'withdrawn' ?\r\n                                        <h2>Succesfully withdrawn {withdrawnAmount ? withdrawnAmount / LAMPORTS_PER_SOL : null}</h2>\r\n                                        : <h3 className='status'>Failed</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='overlay'></div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/ActiveGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    game: Game,\r\n    removeGame: (game: Game) => void\r\n}\r\n\r\nfunction GameBox(props: Props) {\r\n    const [game, setGame] = useState<Game>()\r\n\r\n    const wallet = useWallet()\r\n    const coinSpins = [\r\n        ['spin1080', 'spin1440', 'spin1800', 'spin2160'],\r\n        ['spin900', 'spin1260', 'spin1620', 'spin1980']\r\n    ]\r\n    const [activeGames, setActiveGames] = useState<Game[]>([])\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n\r\n    useEffect(() => {\r\n        setGame(props.game)\r\n    }, [props.game])\r\n\r\n    const getCoinAnimation = (game: Game): string => {\r\n        if (game.result === null || game.result === undefined) throw 'Game is not loaded'\r\n\r\n        const spinIndex = parseInt(game.privateSeedHash, 36) % coinSpins[game.result].length\r\n\r\n        return coinSpins[game.result][spinIndex]\r\n    }\r\n\r\n    const changeGameStatus = (status: string) => {\r\n        if (!game) return\r\n\r\n        if (game.winner?._id === user._id && status === 'revealed') dispatch({ type: 'UPDATE_USER_BALANCE', payload: game.amount * 2 })\r\n\r\n        if (status === 'revealed') {\r\n            setTimeout(() => {\r\n                props.removeGame(game)\r\n            }, 2000)\r\n        }\r\n\r\n        setGame({ ...game, status })\r\n    }\r\n\r\n    const joinGame = async () => {\r\n        if (!(wallet && wallet.publicKey && game)) return\r\n\r\n        if (user._id === game.creator._id) return toast.error('You can not join your game')\r\n        if (user.balance < game.amount) return toast.error('Balance needs to be higher than the game bet')\r\n\r\n        try {\r\n            await axios.post('/api/game/join', {\r\n                gameId: game._id\r\n            })\r\n\r\n            toast.success('Joined the game')\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    const cancelGame = async () => {\r\n        if (!(wallet && wallet.publicKey && game)) return\r\n\r\n        if (game.creator._id !== user._id) return toast.error('You can not cancel another person`s game')\r\n\r\n        try {\r\n            await axios.post('/api/game/cancel', {\r\n                gameId: game._id\r\n            })\r\n\r\n            toast.success('Game has been cancelled')\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {game && game.status !== 'ended' ? <div key={game._id} className='gameWrapper'>\r\n                {game.creator._id === user?._id && game.status === 'active' ? <button className='closeB' onClick={() => cancelGame()}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button> : null}\r\n                <div className='bet'>\r\n                    <img src='./img/coins.png' />\r\n                    <h3>Bet: {game.amount / LAMPORTS_PER_SOL}</h3>\r\n                </div>\r\n                <div className=\"game\">\r\n                    <div className={game.status !== 'revealed' ? 'player' : game.winner?._id == game.creator._id ? 'player winner' : 'player loser'}>\r\n                        <img src={`./img/coin${game.creatorChoice}.png`} className='choice' />\r\n                        <Svg src={createAvatar(avatarStyle, { seed: game.creator.publicKey })} />\r\n                        <Link to={`/u/${game.creator.publicKey}`} className='address'>{shortenAddress(game.creator.publicKey)}</Link>\r\n                    </div>\r\n                    <div className='middle'>\r\n                        {game.status === 'active' || game.status === 'joined'\r\n                            ? <h3 className='vsTag'>VS</h3>\r\n                            : game.status === 'countdown' ?\r\n                                <Countdown date={Date.now() + 3000} onComplete={() => changeGameStatus('flipping')} renderer={time => <h3>{time.seconds}</h3>} />\r\n                                :\r\n                                <div onAnimationEnd={() => changeGameStatus('revealed')} id=\"coinFlip\" className={getCoinAnimation(game)}>\r\n                                    <div className=\"coin0\"><img src='./img/coin0.png' /></div>\r\n                                    <div className=\"coin1\"><img src='./img/coin1.png' /></div>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <div className={game.status !== 'revealed' ? 'player' : game.winner?._id == game.opponent?._id ? 'player winner' : 'player loser'}>\r\n                        {game.opponent ?\r\n                            <>\r\n                                <img src={`./img/coin${1 - game.creatorChoice}.png`} className='choice' />\r\n                                <Svg src={createAvatar(avatarStyle, { seed: game.opponent.publicKey })} />\r\n                                <Link to={`/u/${game.opponent.publicKey}`} className='address'>{shortenAddress(game.opponent.publicKey)}</Link>\r\n                            </> :\r\n                            <>\r\n                                <button onClick={() => joinGame()} className='joinB'>Join</button>\r\n                            </>}\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GameBox;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport '../css/ActiveGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport GameBox from './GameBox';\r\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\r\n\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport Svg from 'react-inlinesvg'\r\nimport { Link } from 'react-router-dom';\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\n\r\nconst activeStatuses = ['active', 'joined', 'countdown', 'flipping']\r\n\r\nfunction ActiveGames() {\r\n\r\n    const wallet = useWallet()\r\n    const [activeGames, setActiveGames] = useState<Game[]>([])\r\n    const [recentGames, setRecentGames] = useState<Game[]>([])\r\n    const [userGames, setUserGames] = useState<Game[]>([])\r\n    const [openGames, setOpenGames] = useState<Game[]>([])\r\n    const [createGameModalOpen, setCreateGameModalOpen] = useState(false)\r\n    const [gameAmount, setgameAmount] = useState<number | null>(0)\r\n    const [depositStatus, setDepositStatus] = useState('none')\r\n    const [chosenCoin, setChosenCoin] = useState(0)\r\n\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n    const sockets = useSelector<CombinedReducer, Sockets>((state) => state.sockets)\r\n\r\n    const inputgameAmount = (input: string) => {\r\n        if (!input) return setgameAmount(null)\r\n        console.log({ input })\r\n        if (Number(input) >= 0) setgameAmount(Number(input) * LAMPORTS_PER_SOL)\r\n        else setgameAmount(0)\r\n    }\r\n\r\n    const createGame = async () => {\r\n        if (!(wallet && wallet.publicKey && gameAmount)) return\r\n\r\n        if (user.balance < gameAmount) return toast.error('Balance needs to be higher than the game bet')\r\n\r\n        try {\r\n            await axios.post('/api/game', {\r\n                amount: gameAmount,\r\n                creatorChoice: chosenCoin\r\n            })\r\n\r\n            toast.success('Game created')\r\n            setCreateGameModalOpen(false)\r\n        } catch (e: any) {\r\n            toast.error(e.response.data.message.toString())\r\n        }\r\n    }\r\n\r\n    const gameUpdate = (updatedGame: Game) => {\r\n        setActiveGames(old => old.map(game => {\r\n            if (game._id === updatedGame._id) {\r\n                if (updatedGame.status === 'ended') updatedGame.status = 'countdown'\r\n                console.log(updatedGame)\r\n                return updatedGame\r\n            }\r\n            return game\r\n        }))\r\n    }\r\n\r\n    const removeGame = (gameToRemove: Game) => {\r\n\r\n        setActiveGames(old => old.filter(game => game._id !== gameToRemove._id))\r\n        setRecentGames(old => [gameToRemove, ...old.slice(0, 30)])\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getGamesData = async () => {\r\n            const [activeGames, recentGames] = await Promise.all([\r\n                axios.get('/api/game/allActive'),\r\n                axios.get('/api/game/lastEnded')\r\n            ])\r\n\r\n            console.log({ activeGames: activeGames.data })\r\n            setActiveGames(activeGames.data)\r\n            setRecentGames(recentGames.data)\r\n        }\r\n\r\n        getGamesData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!sockets.game) return\r\n\r\n        sockets.game.on('newGame', (game: Game) => setActiveGames(old => [...old, game]))\r\n        sockets.game.on('gameUpdate', (updatedGame: Game) => gameUpdate(updatedGame))\r\n\r\n    }, [sockets.game])\r\n\r\n    useEffect(() => {\r\n        let userGames: Game[] = []\r\n        let openGames: Game[] = []\r\n        activeGames.forEach(game => {\r\n            if (game.status !== 'ended' && game.status !== 'cancelled') {\r\n                game.creator._id === user?._id ? userGames.push(game) : openGames.push(game)\r\n            }\r\n        })\r\n        setUserGames(userGames)\r\n        setOpenGames(openGames)\r\n    }, [user, activeGames])\r\n\r\n    return (\r\n        <div className='ActiveGames' >\r\n            {user ? <button className='createGameB' onClick={() => setCreateGameModalOpen(true)}>Create Game</button> : null}\r\n            <h3 className='typeHeader'>MY GAMES <span className='gamesCounter'>{userGames.length}</span></h3>\r\n            {userGames.length > 0 ? <div className='games'>\r\n                {userGames.map(game => {\r\n                    return activeStatuses.includes(game.status) ? (\r\n                        <GameBox key={game._id} game={game} removeGame={removeGame} />\r\n                    ) : null\r\n                })}\r\n            </div> : <div className='typePlaceHolder'><p>Your CoinFlip games will appear here</p></div>}\r\n            <h3 className='typeHeader'>OPEN GAMES <span className='gamesCounter'>{openGames.length}</span></h3>\r\n            {openGames.length > 0 ? <div className='games'>\r\n                {openGames.map(game => {\r\n                    return activeStatuses.includes(game.status) ? (\r\n                        <GameBox key={game._id} game={game} removeGame={removeGame} />\r\n                    ) : null\r\n                })}\r\n            </div> : <div className='typePlaceHolder'><p>No open Coinflip games at the moment</p></div>}\r\n            <h3 className='typeHeader'>RECENT GAMES <span className='gamesCounter'>{recentGames.length}</span></h3>\r\n            <table className='recentGames'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Creator</th>\r\n                        <th>Opponent</th>\r\n                        <th>Bet</th>\r\n                        <th>Result</th>\r\n                        <th>Winner</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {recentGames.map(game =>\r\n                        game.opponent && game.winner && game.result ?\r\n                            <tr key={game._id} className='recentGame'>\r\n                                <td><div className=\"user tdContent\"><Svg src={createAvatar(avatarStyle, { seed: game.creator.publicKey })} /> <Link to={`/u/${game.creator.publicKey}`}> {shortenAddress(game.creator.publicKey)}</Link></div></td>\r\n                                <td><div className=\"user tdContent\"><Svg src={createAvatar(avatarStyle, { seed: game.opponent.publicKey })} /> <Link to={`/u/${game.opponent.publicKey}`}> {shortenAddress(game.opponent.publicKey)}</Link></div></td>\r\n                                <td><div className=\"coin tdContent\">{game.amount / LAMPORTS_PER_SOL} <img src='./img/coins.png' /></div></td>\r\n                                <td><div className=\"result tdContent\"><img src={`./img/coin${game.result}.png`} /></div></td>\r\n                                <td><div className='user tdContent'><Svg src={createAvatar(avatarStyle, { seed: game.winner.publicKey })} /> <Link to={`/u/${game.winner.publicKey}`}> {shortenAddress(game.winner.publicKey)}</Link></div></td>\r\n                            </tr> : null)}\r\n                </tbody>\r\n            </table>\r\n            <div className='modal' style={{ display: createGameModalOpen ? 'flex' : 'none' }}>\r\n                <div className='container'>\r\n                    <div className='wrapper'>\r\n                        <button className='closeB' onClick={() => setCreateGameModalOpen(false)}><svg width=\"14\" height=\"14\"><path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"></path></svg></button>\r\n                        <div className='logo'>\r\n                            <img alt='logo' src='./logo.png' />\r\n                        </div>\r\n                        <h1 className='title'>Create Game</h1>\r\n                        {\r\n                            depositStatus === 'none' ?\r\n                                <>\r\n                                    <div className='coinChooser'>\r\n                                        <img onClick={() => setChosenCoin(0)} className={chosenCoin === 0 ? 'chosen' : ''} src='./img/coin0.png' />\r\n                                        <img onClick={() => setChosenCoin(1)} className={chosenCoin === 1 ? 'chosen' : ''} src='./img/coin1.png' />\r\n                                    </div>\r\n                                    <input type=\"number\" value={gameAmount === null ? '' : gameAmount / LAMPORTS_PER_SOL} onChange={(event) => inputgameAmount((event.target as HTMLInputElement).value)} />\r\n                                    <button className='depositB' onClick={() => createGame()}>Create</button></>\r\n                                :\r\n                                depositStatus === 'sent' ?\r\n                                    <>\r\n                                        <h3 className='status'>Your deposit was sent <br />It will be validated within 60 seconds</h3>\r\n                                    </> : <h3 className='status'>Failed</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='overlay'></div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ActiveGames;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/Chat.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../interfaces/Message';\r\nimport { Socket } from 'socket.io-client';\r\nimport { useRef } from 'react';\r\n\r\nfunction Chat() {\r\n    const messagesRef = useRef<null | HTMLDivElement>(null)\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [messages, setMessages] = useState<Message[]>([])\r\n\r\n    const user = useSelector<CombinedReducer, User>((state) => state.user)\r\n    const sockets = useSelector<CombinedReducer, Sockets>((state) => state.sockets)\r\n\r\n    const sendMessage = async () => {\r\n        if (message.length < 3) return toast.error('Message is too short')\r\n\r\n        await axios.post('/api/message', { content: message })\r\n\r\n        setMessage('')\r\n    }\r\n\r\n    const scrollMessagesToBottom = () => {\r\n        if (!messagesRef.current) return\r\n\r\n        messagesRef.current.scrollTop = messagesRef.current.scrollHeight\r\n    }\r\n\r\n    const inputMessage = (content: string) => {\r\n        const contentWords = content.split(\" \").map(c => c.trim())\r\n\r\n        setMessage(contentWords.join(\" \"))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const getLast = async () => {\r\n            const messages = (await axios.get('/api/message/last')).data\r\n            console.log({ messages })\r\n\r\n            setMessages(messages)\r\n        }\r\n\r\n        getLast()\r\n        scrollMessagesToBottom()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        scrollMessagesToBottom()\r\n    }, [messages])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!sockets.message) return\r\n\r\n        sockets.message.on('newMessage', (message: Message) => {\r\n            setMessages(old => [...old, message])\r\n        })\r\n    }, [sockets])\r\n\r\n\r\n    return (\r\n        <div className='Chat'>\r\n            <div className='chat'>\r\n                <div ref={messagesRef} className='messages'>\r\n                    {messages.map(message =>\r\n                        <div key={message._id} className='message'>\r\n                            <div className='avatar'><Svg className='avatar' src={createAvatar(avatarStyle, { seed: message.creator.publicKey })} /></div>\r\n                            <p className='content'><Link to={`/u/${message.creator.publicKey}`} className='address'>{shortenAddress(message.creator.publicKey)}</Link>{message.content}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className='inputMessage'>\r\n                    {user\r\n                        ? <TextareaAutosize onChange={(event) => inputMessage((event.target as HTMLTextAreaElement).value)} onKeyPress={(event) => event.key === 'Enter' ? sendMessage() : null} value={message} placeholder='Type Message...' />\r\n                        : <h4>You have to Log In</h4>}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/UserGames.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    games: Game[],\r\n    user: User\r\n}\r\n\r\nfunction UserGames(props: Props) {\r\n    return (\r\n        <table className='UserGames'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Bet</th>\r\n                    <th>Picked Side</th>\r\n                    <th>Opponent</th>\r\n                    <th>Result</th>\r\n                    <th>Win Amount</th>\r\n                    <th>Private Seed</th>\r\n                    <th>Private Seed Hash</th>\r\n                    <th>Solana Blockhash</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.games.map(game =>\r\n                        <tr className='game'>\r\n                            <td>{moment(game.createdAt).format('lll')}</td>\r\n                            <td>{game.amount / LAMPORTS_PER_SOL}</td>\r\n                            <td>{game.creator._id === props.user._id ? game.creatorChoice : 1 - game.creatorChoice}</td>\r\n                            <td>{game.creator._id === props.user._id ? (game.opponent ? <Link to={`/u/${game.opponent.publicKey}`}>{shortenAddress(game.opponent.publicKey)}</Link> : '-') : <Link to={`/u/${game.creator.publicKey}`}>{shortenAddress(game.creator.publicKey)}</Link>}</td>\r\n                            <td>{game.status === 'ended' ? game.result : game.status.charAt(0).toUpperCase() + game.status.slice(1)}</td>\r\n                            <td>{game.status === 'ended' ? game.winner?._id === props.user._id ? <span className='win'>{game.amount * 2 / LAMPORTS_PER_SOL}</span> : <span className='lose'>{-game.amount / LAMPORTS_PER_SOL}</span> : 0}</td>\r\n                            <td>{game.privateSeed}</td>\r\n                            <td>{game.privateSeedHash}</td>\r\n                            <td>{game.blockhash || '-'}</td>\r\n                        </tr>\r\n                    )\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default UserGames;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SystemProgram, Transaction } from '@solana/web3.js'\r\nimport { shortenAddress } from '../utils/shortenAddress';\r\nimport Countdown from 'react-countdown';\r\nimport Svg from 'react-inlinesvg'\r\n\r\nimport '../css/Profile.css'\r\nimport '../css/Coin.css'\r\nimport '../css/Modal.css'\r\nimport User from '../interfaces/User';\r\nimport { CombinedReducer } from '../store';\r\nimport Game from '../interfaces/Game';\r\nimport { createAvatar } from '@dicebear/avatars'\r\nimport * as avatarStyle from '@dicebear/adventurer';\r\nimport { toast } from 'react-toastify';\r\nimport { Sockets } from '../reducers/sockets';\r\nimport moment from 'moment'\r\nimport UserGames from './UserGames';\r\n\r\nfunction Profile() {\r\n    const { publicKey } = useParams()\r\n    const [user, setUser] = useState<User>()\r\n    const [games, setGames] = useState<Game[]>([])\r\n    const [notFound, setNotFound] = useState(false)\r\n    const [gamesWon, setGamesWon] = useState(0)\r\n    const [gamesLost, setGamesLost] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (!publicKey) return\r\n\r\n        const getUser = async (publicKey: string) => {\r\n            const user: User = (await axios.get(`/api/u/${publicKey}`)).data\r\n            const games: Game[] = (await axios.get(`/api/game/u/${publicKey}`)).data\r\n\r\n            if (!user) setNotFound(true)\r\n\r\n            setUser(user)\r\n            setGames(games)\r\n        }\r\n\r\n        getUser(publicKey)\r\n    }, [publicKey])\r\n\r\n    useEffect(() => {\r\n        if (!games || !user) return\r\n\r\n        let gamesWon = 0\r\n        let gamesLost = 0\r\n        games.forEach(game => {\r\n            if (game.status !== 'ended' || !game.winner) return\r\n\r\n            if (game.winner._id === user._id) {\r\n                gamesWon++\r\n            } else {\r\n                gamesLost++\r\n            }\r\n        })\r\n\r\n        setGamesWon(gamesWon)\r\n        setGamesLost(gamesLost)\r\n    }, [user, games])\r\n\r\n    return (\r\n        <>\r\n            {user ?\r\n                <div className='Profile'>\r\n                    <div className='profileBox'>\r\n                        <Svg className='avatar' src={createAvatar(avatarStyle, { seed: user.publicKey.toString() })} />\r\n                        <div className='info'>\r\n                            <div className='address'>\r\n                                <h1>{user.publicKey}</h1>\r\n                                <a className='scanLink' target=\"_blank\" rel=\"noopener noreferrer\" href={`https://solscan.io/account/${user.publicKey.toString()}`}><img src='/img/solscan.png' /></a>\r\n                            </div>\r\n                            <div className='gameStats'>\r\n                                <div className='gameStat'>\r\n                                    <h2>Games Won:</h2>\r\n                                    <h2>{gamesWon}</h2>\r\n                                </div>\r\n                                <div className='statCircle' style={{\r\n                                    backgroundImage: games.length > 0 ? `linear-gradient(#041b37, #041b37), linear-gradient( 45deg, green, green ${gamesWon / (gamesWon + gamesLost) * 100}%, red ${gamesLost / (gamesWon + gamesLost) * 100}% )` : `linear-gradient(#041b37, #041b37), linear-gradient( 45deg, gray, gray 100% )`\r\n                                }}>\r\n                                </div>\r\n                                <div className='gameStat'>\r\n                                    <h2>Games Lost:</h2>\r\n                                    <h2>{gamesLost}</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {games.length > 0\r\n                        ? <UserGames user={user} games={games} />\r\n                        :\r\n                        null}\r\n                </div>\r\n                : null\r\n            }\r\n            {notFound ? <div className='Profile'><h1 className='notFound'>User was not found</h1> </div> : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useEffect, useMemo } from 'react';\n\n// import Navbar from './components/Navbar'\n// import ActiveGames from './components/ActiveGames'\n\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n} from '@solana/wallet-adapter-wallets';\nimport {\n  WalletModalProvider,\n  WalletMultiButton\n} from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport '@solana/wallet-adapter-react-ui/styles.css'\nimport { io } from \"socket.io-client\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './css/wallet.css'\nimport Navbar from './components/Navbar';\nimport ActiveGames from './components/ActiveGames';\nimport Chat from './components/Chat';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Profile from './components/Profile';\n\nconst network = WalletAdapterNetwork.Devnet\n\nfunction App() {\n\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n  const wallets = useMemo(() => [\n    getPhantomWallet(),\n    getSlopeWallet(),\n    getSolflareWallet()\n  ], [network])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const gameSocket = io(\"/game\")\n    const userSocket = io(\"/user\")\n    const messageSocket = io(\"/message\")\n\n    dispatch({ type: 'LOAD_GAME_SOCKET', payload: gameSocket })\n    dispatch({ type: 'LOAD_USER_SOCKET', payload: userSocket })\n    dispatch({ type: 'LOAD_MESSAGE_SOCKET', payload: messageSocket })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect>\n          <WalletModalProvider>\n            <BrowserRouter>\n              <Navbar />\n              <div className='Body'>\n                <Chat />\n                <Routes>\n                  <Route path='/' element={<ActiveGames />} />\n                  <Route path='/u/:publicKey' element={<Profile />} />\n                </Routes>\n              </div>\n            </BrowserRouter>\n          </WalletModalProvider>\n          <ToastContainer autoClose={1500} />\n        </WalletProvider>\n      </ConnectionProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import User from '../interfaces/User'\r\n\r\nenum UserActions {\r\n    LOAD_USER = 'LOAD_USER',\r\n    UPDATE_USER_BALANCE = 'UPDATE_USER_BALANCE'\r\n}\r\n\r\ninterface LoadUserAction {\r\n    type: UserActions.LOAD_USER,\r\n    payload: User\r\n}\r\n\r\ninterface UpdateBalanceAction {\r\n    type: UserActions.UPDATE_USER_BALANCE,\r\n    payload: number\r\n}\r\n\r\n\r\ntype UserAction = LoadUserAction | UpdateBalanceAction\r\n\r\nexport default (state: User | null = null, action: UserAction): User | null => {\r\n\r\n    switch (action.type) {\r\n        case UserActions.LOAD_USER: {\r\n            return action.payload\r\n        }\r\n        case UserActions.UPDATE_USER_BALANCE: {\r\n            console.log('prev balance:', state?.balance)\r\n            console.log('balance change: ', action.payload)\r\n            return state && { ...state, balance: state.balance + action.payload }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Keypair } from \"@solana/web3.js\"\r\n\r\n\r\nenum AssociatedKeypairActions {\r\n    LOAD_ASSOCIATED_KEYPAIR = 'LOAD_ASSOCIATED_KEYPAIR'\r\n}\r\n\r\ninterface LoadAssociatedKeypairAction {\r\n    type: AssociatedKeypairActions.LOAD_ASSOCIATED_KEYPAIR,\r\n    payload: Keypair\r\n}\r\n\r\n\r\ntype AssociatedKeypairAction = LoadAssociatedKeypairAction\r\n\r\nexport default (state: Keypair | null = null, action: AssociatedKeypairAction): Keypair | null => {\r\n\r\n    switch (action.type) {\r\n        case AssociatedKeypairActions.LOAD_ASSOCIATED_KEYPAIR: {\r\n            return action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { WalletContextState } from \"@solana/wallet-adapter-react\"\r\n\r\nenum WalletActions {\r\n    LOAD_WALLET = 'LOAD_WALLET'\r\n}\r\n\r\ninterface LoadWalletAction {\r\n    type: WalletActions.LOAD_WALLET,\r\n    payload: WalletContextState\r\n}\r\n\r\ntype WalletAction = LoadWalletAction\r\n\r\n\r\n\r\nexport default (state: WalletContextState | null = null, action: WalletAction): WalletContextState | null => {\r\n    switch (action.type) {\r\n        case WalletActions.LOAD_WALLET: {\r\n            return action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { Socket } from \"socket.io-client\"\r\n\r\nenum SocketsActions {\r\n    LOAD_GAME_SOCKET = 'LOAD_GAME_SOCKET',\r\n    LOAD_USER_SOCKET = 'LOAD_USER_SOCKET',\r\n    LOAD_MESSAGE_SOCKET = 'LOAD_MESSAGE_SOCKET'\r\n}\r\n\r\ninterface LoadGameSocketAction {\r\n    type: SocketsActions.LOAD_GAME_SOCKET,\r\n    payload: Socket\r\n}\r\n\r\ninterface LoadUserSocketAction {\r\n    type: SocketsActions.LOAD_USER_SOCKET,\r\n    payload: Socket\r\n}\r\n\r\ninterface LoadMessageSocketAction {\r\n    type: SocketsActions.LOAD_MESSAGE_SOCKET,\r\n    payload: Socket\r\n}\r\n\r\ntype SocketsAction = LoadGameSocketAction | LoadUserSocketAction | LoadMessageSocketAction\r\nexport type Sockets = { 'user'?: Socket, 'game'?: Socket, 'message'?: Socket }\r\n\r\nconst defaultSockets = { 'user': undefined, 'game': undefined, 'message': undefined }\r\n\r\nexport default (state: Sockets = defaultSockets, action: SocketsAction): Sockets => {\r\n    switch (action.type) {\r\n        case SocketsActions.LOAD_GAME_SOCKET: {\r\n            return { ...state, 'game': action.payload }\r\n        }\r\n        case SocketsActions.LOAD_USER_SOCKET: {\r\n            return { ...state, 'user': action.payload }\r\n        }\r\n        case SocketsActions.LOAD_MESSAGE_SOCKET: {\r\n            return { ...state, 'message': action.payload }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { WalletContextState } from '@solana/wallet-adapter-react'\r\nimport { combineReducers, createStore } from 'redux'\r\nimport User from './interfaces/User'\r\nimport userReducer from './reducers/user'\r\nimport associatedKeypairReducer from './reducers/associatedKeypair'\r\nimport walletReducer from './reducers/wallet'\r\nimport socketsReducer, { Sockets } from './reducers/sockets'\r\nimport { Keypair } from '@solana/web3.js'\r\n\r\nconst combined = combineReducers({\r\n    user: userReducer,\r\n    wallet: walletReducer,\r\n    associatedKeypair: associatedKeypairReducer,\r\n    sockets: socketsReducer\r\n})\r\n\r\nexport interface CombinedReducer {\r\n    user: User,\r\n    wallet: WalletContextState,\r\n    associatedKeypair: Keypair,\r\n    sockets: Sockets\r\n}\r\nexport default createStore(combined)","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const shortenAddress = (publicKey: string): string => {\r\n    return publicKey.slice(0, 5) + '...' + publicKey.slice(-5)\r\n}"],"sourceRoot":""}